% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadData.R
\name{filterClones}
\alias{filterClones}
\title{Adaptive immune repertoire filtering}
\usage{
filterClones(
  raw,
  keep.ambiguous = FALSE,
  keep.unproductive = FALSE,
  aa.th = NULL,
  outFiltered = FALSE
)
}
\arguments{
\item{raw}{a single clonotype table containing the previously cited required columns}

\item{keep.ambiguous}{a boolean, whether ambiguous sequences containing an "N" in the CDR3 nucleotide should be left in. Default is \code{FALSE}.}

\item{keep.unproductive}{a boolean, whether unproductive sequences should be left in. Default is \code{FALSE}.
Unproductive sequences include:

- out-of-frame sequences: sequences with frame shifts based on the number of nucleotides in the ntCDR3 column

- sequences containing stop codons: aaCDR3 sequences with a "*" or "~" symbols.should be kept. Default is \code{FALSE}.}

\item{aa.th}{an interger, indicates the maximum number of amino acids deviating from the mean length to tolerate. Default is 8. In this case, all amino acid CDR3s sequences with length falling outside the range of mean+- 8 are filtered out.}

\item{outFiltered}{write in the directory path a data frame containing the filtered out reads. Default path is getwd().}
}
\value{
a filtered clonotype table.
}
\description{
This function filters adaptive immune repertoires that were not aligned by a AnalyzAIRR-supported tool. The loaded clonotype table must however contain the  required columns:

 - sample_id: sample names

 - V: Variable gene name

 - J: Joining gene name

 - aaCDR3: amino acid CDR3 sequence

 - ntCDR3: nucleotide CDR3 sequence

 - aaClone: Full clone sequence including the V gene, the amino acid CDR3 sequence and the J gene

 - VJ: V-J gene combination using V and J gene names

 - ntClone: Full clone sequence including the V gene, the nucleotide CDR3 sequence and the J gene

 - count: the occurrence of the clone

 and applies at least one of the following filters:

 - filter out ambiguous clones

 - filter out unproductive sequences including out-of-frame sequences with stop codons

 - filter out singletons, i.e clones with an occurrence of 1
}
\examples{

l <- list.files(system.file(file.path('extdata/MiAIRR'),
                     package = 'AnalyzAIRR'),
                     full.names = TRUE)
path <- l[1]

miairr_table <- parseAIRRC(path = path, chain = "TRA")

out <- filterClones(miairr_table,
                        keep.ambiguous = FALSE,
                        keep.unproductive = TRUE,
                        aa.th = 8,
                        outFiltered = FALSE)



}
\keyword{internal}
