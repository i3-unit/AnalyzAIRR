% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotFunctions.R
\name{plotCountIntervals}
\alias{plotCountIntervals}
\title{Visualization of the clonal distribution per count interval}
\usage{
plotCountIntervals(
  x,
  level = c("clone", "clonotype", "CDR3nt", "CDR3aa"),
  groupBy = NULL,
  label_colors = NULL,
  show_stats = TRUE
)
}
\arguments{
\item{x}{an object of class  \code{\linkS4class{RepSeqExperiment}}}

\item{level}{a character specifying the level of the repertoire to be taken into account when calculating the clonal distribution. Should be one of clone","clonotype", "CDR3nt" or "CDR3aa".}

\item{groupBy}{a character indicating one or multiple column names in mData. Colors are thus attributed to the different groups within the first column, and a facet is applied on the second column. Statistical tests are performed between the chosen groups. The chosen column must be of class factor.}

\item{label_colors}{a list of colors for each variable in groupBy See \code{\link{plotColors}}. If NULL, default colors are used.}
}
\description{
This function plots two histograms of the clonal distribution per a set of count intervals in all the samples within the dataset. Intervals are: 1, ]1, 10], ]10, 100], ]100, 1000], ]1000, 10000] and ]10000, Inf].

The plot titled "Distribution" calculates the proportion of each interval in the whole repertoire, whereas the one titled "Cumulative frequency" shows the cumulative frequency of the sequences within each interval.

This could allow a global view of the repertoire fraction contributing the most to the repertoire. For instance, top sequences belonging to the highest interval often constitute a low fraction of the whole repertoire but contribute more significantly in terms of cumulative frequency in view of their high occurrence.

Samples can be statistically compared in each interval using the \code{groupBy} parameter.
}
\examples{

data(RepSeqData)

plotCountIntervals(x = RepSeqData, level="CDR3aa")

plotCountIntervals(x = RepSeqData, level="CDR3nt",  groupBy="cell_subset")

plotCountIntervals(x = RepSeqData, level="CDR3nt",  groupBy=c("cell_subset", "sex"))

}
