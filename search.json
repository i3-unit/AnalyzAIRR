[{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/dataloading.html","id":"input-format","dir":"Articles","previous_headings":"","what":"Input format","title":"Data loading","text":"AnalyzAIRR proposes two different data loading processes depending alignment files format.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/dataloading.html","id":"automatic-format-detection","dir":"Articles","previous_headings":"Input format","what":"Automatic format detection","title":"Data loading","text":"AnalyzAIRR integrates parser functions automatically detect following formats: MiXCR: https://github.com/milaboratory/mixcr immunoSEQ: https://www.immunoseq.com/ MiAIRR: https://docs.airr-community.org/en/latest/datarep/rearrangements.html alignment files can loaded using readAIRRSet() function.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/dataloading.html","id":"reformatting-of-annotated-files","dir":"Articles","previous_headings":"Input format","what":"Reformatting of annotated files","title":"Data loading","text":"AnalyzAIRR offers possibility load alignment files formats ones cited previous section. files contain following required column names: sample_id: Sample names V: Variable gene name (IMGT nomenclature) J: Joining gene name (IMGT nomenclature) ntCDR3: Nucleotide CDR3 sequence aaCDR3: Amino acid CDR3 sequence count: occurrence sequence within sample Note: order columns must respected. Input files can contain additional columns taken account loading process. readFormatSet() equivalent function readAIRRSet() using user-formatted files. allows loading filtering list files using previously described parameters.","code":""},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/dataloading.html","id":"paths-to-input-files","dir":"Articles","previous_headings":"Data loading","what":"Paths to input files","title":"Data loading","text":"Specify list paths aligned files. list 8 samples selected published study (Mhanna et al., 2021) illustrate use package. Samples collected spleen 4 healthy mice sorted naïve regulatory T cells (nTreg), activated/memory regulatory T cells (amTreg). Fastq files aligned using MiXCR exported MiAIRR format, can found https://github.com/i3-unit/AnalyzAIRR/tree/master/inst/extdata/MiAIRR","code":"l <- list.files(system.file(file.path('extdata/MiAIRR'),                             package = 'AnalyzAIRR'),                             full.names = T)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/dataloading.html","id":"metadata","dir":"Articles","previous_headings":"Data loading","what":"Metadata","title":"Data loading","text":"possible provide metadata users wish perform inter-group comparative analyses. metadata provided dataframe containing: column sample names match name alignment files order list. one column containing sample names provided metadata file. column assigned row.names argument loading metadata. additional columns relevant information analyses. Columns encompass experimental conditions, clinical variables, etc… specific column names order required. Note: Since R 4.0.0, stringsAsFactors set FALSE default, user thus need coerce character vectors factors.","code":"metadata <- read.table(system.file(file.path('extdata/sampledata.txt'),                             package = 'AnalyzAIRR'),                              header = T,                             row.names = 1) metadata$cell_subset <- factor(metadata$cell_subset) metadata$sex <- factor(metadata$sex)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/dataloading.html","id":"loading","dir":"Articles","previous_headings":"Data loading","what":"Loading","title":"Data loading","text":"Whether ’re using readAIRRSet() readFormatSet() function, following parameters must specified: fileList: list paths input files. File extensions can one following: .tsv, txt.gz, .zip, .tar fileFormat: name tool used generate alignment files. one “MiXCR”, “immunoseq” “MiAIRR”. chain: chain type analyzed. one following: “TRA”, “TRB”,“TRG” “TRD” TCR repertoires “IGH”,“IGK” “IGL” BCR repertoires single chain can loaded . sampleinfo: data frame metadata information keep.ambiguous: choice whether ambiguous sequences left datasets keep.unproductive: choice whether unproductive sequences left datasets filter.singletons: choice whether sequences occurrence 1 filtered aa.th: threshold determining amino acid CDR3 sequence length limits. Refer function’s documentation details outFiltered: choice whether write output file containing filtered reads previously cited filtering parameters cores: number CPU cores used parallel processing possible apply -mentioned filtering functions subsequently data loading step case users wish explore datasets data manipulation.","code":"RepSeqData <- readAIRRSet(fileList = l,                           fileFormat = \"MiAIRR\",                           chain = \"TRA\",                           sampleinfo = metadata,                           keep.ambiguous = FALSE,                           keep.unproductive = FALSE,                           filter.singletons = FALSE,                           aa.th = 8,                           outFiltered = FALSE,                           raretab = FALSE,                           cores = 1L)"},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/dataloading.html","id":"architecture","dir":"Articles","previous_headings":"The RepSeqExperiment object","what":"Architecture","title":"Data loading","text":"Data loading either one readFormatSet() readAIRRSet() allows generation RepSeqExperiment object. object used input functions. composed 4 slots, containing different type information. assayData: data.table composed alignment datasets containing following columns: sample_id: Sample names V: Variable gene name J: Joining gene name VJ: V-J gene combination using V J gene names. ntCDR3: Nucleotide CDR3 sequence aaCDR3: Amino acid CDR3 sequence aaClone: full sequence including V gene, amino acid CDR3 sequence J gene ntClone: full sequence including V gene, nucleotide CDR3 sequence J gene count: occurrence clone slot can extracted using assay() function. metaData: data frame containing metadata information provided building RepSeqExperiment object, followed number statistics calculated sample. statistics include: nSequences: total number sequences sample V: total number V genes expressed sample J: total number J genes VJ: total number V-J gene combinations ntCDR3: number unique nucleotide CDR3s aaCDR3: number unique amino acid CDR3s aaClone: number unique aaClones ntClone: number unique ntClones Chao1: Estimates undetected species using information rarest species (numbers singletons doubletons) (Chao, 1984). Improved Chao1: extension Chao1 uses additional information, namely, numbers tripletons quadrupletons (Chiu et al., 2014). slot can extracted using mData() function. otherData: list encompassing output defined set functions. slot can extracted using oData() function. instance, outFiltered parameter set TRUE RepSeqExperiment generation, filtered sequences stored slot can viewed followed. addition, oData contains list colors attributed group metadata file History: data frame registering operations performed RepSeqExperiment object, filtering -sampling. slot can extracted using History() function.","code":"assay(RepSeqData) mData(RepSeqData) oData(RepSeqData)$filtered oData(RepSeqData)$label_colors ## $sample_id ##  tripod-30-813  tripod-30-815  tripod-31-846  tripod-31-848  tripod-35-970  ##      \"#7FC97F\"      \"#BEAED4\"      \"#FDC086\"      \"#FFFF99\"      \"#386CB0\"  ##  tripod-35-972 tripod-36-1003 tripod-36-1005  ##      \"#F0027F\"      \"#BF5B17\"      \"#666666\"  ##  ## $cell_subset ##    amTreg     nTreg  ## \"#7FC97F\" \"#BEAED4\"  ##  ## $sex ##         F         M  ## \"#FDC086\" \"#FFFF99\" History(RepSeqData)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/dataloading.html","id":"repseqexp-merging","dir":"Articles","previous_headings":"The RepSeqExperiment object","what":"RepSeqExp merging","title":"Data loading","text":"mergeRepSeq() allows combine two RepSeqExperiment objects encompassing different datasets. , sample_id datasets renamed using function.","code":"l <- list.files(system.file(file.path('extdata/MiAIRR'),                      package = 'AnalyzAIRR'),                      full.names = TRUE)  dataset1 <- readAIRRSet(fileList = l[c(1:3)],                        cores = 1L,                        fileFormat = \"MiAIRR\",                        chain = \"TRA\",                        sampleinfo = NULL,                        filter.singletons = FALSE,                        outFiltered = FALSE) ## Running on 1 cores... ## Loading and filtering sequences... ## Assembling sequences... ## Creating a RepSeqExperiment object... ## Done. dataset2 <- readAIRRSet(fileList = l[c(4:8)],                        cores = 1L,                        fileFormat = \"MiAIRR\",                        chain = \"TRA\",                        sampleinfo = NULL,                        filter.singletons = FALSE,                        outFiltered = FALSE) ## Running on 1 cores... ## Loading and filtering sequences... ## Assembling sequences... ## Creating a RepSeqExperiment object... ## Done. dataset <- mergeRepSeq(a = dataset1, b = dataset2)"},{"path":[]},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/datamanipulation.html","id":"based-on-sequence-occurrence","dir":"Articles","previous_headings":"Filtering > Sequence filtering","what":"Based on sequence occurrence","title":"Data manipulation","text":"filterCount() filters sequences, level, count chosen threshold. function returns RepSeqExperiment object can used perform -depth analyses remaining dataset. parameter group allows selection group samples filtering must applied. samples belong particular group metaData slot. following case, ’re filtering aaClones count 1 amTreg samples.","code":"RepSeqData_filtered <- filterCount(x = RepSeqData,                                    n = 1,                                    level = \"aaClone\") RepSeqData_filtered_amTreg <- filterCount(x = RepSeqData,                                           n = 1,                                           level = \"aaClone\",                                           group = c(\"cell_subset\", \"amTreg\"))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/datamanipulation.html","id":"based-on-sequence-name","dir":"Articles","previous_headings":"Filtering > Sequence filtering","what":"Based on sequence name","title":"Data manipulation","text":"filterSequence() filters specific sequences group samples.","code":"RepSeqData_filtered <- filterSequence(x = RepSeqData,                                       level = \"aaClone\",                                       name = \"TRAV11 CVVGDRGSALGRLHF TRAJ18\",                                       group = c(\"cell_subset\" , \"Teff\"))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/datamanipulation.html","id":"sample-filtering","dir":"Articles","previous_headings":"Filtering","what":"Sample filtering","title":"Data manipulation","text":"dropSamples() offers possibility filter one multiple repertoires specifying corresponding sample_id. repertoires can ones identified, instance, outliers exploratory analysis","code":"RepSeqData_drop <- dropSamples(x = RepSeqData,                               sampleNames=c(\"tripod-30-813\", \"tripod-30-815\"))"},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/datamanipulation.html","id":"based-on-sequence-sharing","dir":"Articles","previous_headings":"Data selection","what":"Based on sequence sharing","title":"Data manipulation","text":"getPublic() allows subset RepSeqExperiment object order extract sequences either shared : samples belonging specified group samples within whole dataset group parameter specified. sharing threshold set 50% selected samples. Similarly, possible extract private sequences getPrivate(). parameter singletons set TRUE, private sequences count 1 returned.","code":"# Get clones present in at least 50% of the samples belonging to the amTreg group RepSeqData_public <- getPublic(x = RepSeqData,                                  level = \"aaClone\",                                  group = c(\"cell_subset\", \"amTreg\")) RepSeqData_private <- getPrivate(x = RepSeqData,                                 level = \"ntClone\",                                 singletons = FALSE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/datamanipulation.html","id":"based-on-sequence-occurrence-1","dir":"Articles","previous_headings":"Data selection","what":"Based on sequence occurrence","title":"Data manipulation","text":"getTopSequences() allows extraction top expressed sequences. prop parameter allows users specify percentage top sequences extract.","code":"RepSeqData_top <- getTopSequences(x = RepSeqData,                                   level = \"aaClone\",                                   group = c(\"cell_subset\", \"Teff\"),                                    prop = 0.1)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/datamanipulation.html","id":"based-on-sequence-functionality","dir":"Articles","previous_headings":"Data selection","what":"Based on sequence functionality","title":"Data manipulation","text":"getProductive() getUnproductive() allow extraction productive unproductive sequences respectively case filters applied building RepSeqExperiment object. Note: -mentioned functions can applied following repertoire level: clone, clonotype, CDR3aa CDR3nt.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/datanormalization.html","id":"down-sampling","dir":"Articles","previous_headings":"","what":"Down-sampling","title":"Normalization","text":"strategy can applied studied samples largely differ repertoire sizes. using sampleRepSeqExp() function, users can choose value samples downsampled. specified, lowest number sequences across dataset used. function returns new RepSeqExperiment object downsized data. Figure 1: Summary plots showing effect downsampling curves plotting number sequences aaClones sample","code":"RepSeqData_ds<- sampleRepSeqExp(x = RepSeqData,                                  sample.size = 50000) #> You set `rngseed` to FALSE. Make sure you've set & saved #>   the random seed of your session for reproducibility. #>  See `?set.seed` #> Down-sampling to 50000 sequences... #> Creating a RepSeqExperiment object... #> Done."},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/datanormalization.html","id":"shannon-based-normalization","dir":"Articles","previous_headings":"","what":"Shannon-based normalization","title":"Normalization","text":"strategy adapted Chaara et al., 2018 can used eliminate “uninformative” sequences resulting experimental noise. uses Shannon entropy threshold applied ntClone level. strategy particularly efficient applied small samples corrects altered count distributions caused high-sequencing depth. function ShannonNorm() allows application strategy without need specify parameter returns new RepSeqExperiment object corrected data. Figure 2: summary plot showing number ntClones pre-post-Shannon normalizatin sample  Notes: Eliminated sequences sample stored otherData slot. Chao, richness estimator, isn’t recalculated normalized datasets original composition modified.","code":"RepSeqData_sh <- ShannonNorm(x = RepSeqData) #> Creating a RepSeqExperiment object... #> Done."},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/exploratory.html","id":"metadata-statistics","dir":"Articles","previous_headings":"Descriptive statistics","what":"metaData statistics","title":"Data exploration","text":"Statistics metaData slot, either calculated building RepSeqExperiment object supplied user metadata file, can visualized sample using plotStatistics() function colorBy parameter set sample id column. Figure 1: barplot showing number TCR sequences identified sample.  Groups samples can separated using facetBy parameter. Figure 2: barplot showing number ntClones identified nTreg amTreg samples.","code":"plotStatistics(x = RepSeqData,                stat = \"nSequences\",                colorBy = \"sample_id\") plotStatistics(x = RepSeqData,                stat = \"ntClone\",                colorBy = \"sample_id\",                facetBy = \"cell_subset\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/exploratory.html","id":"repertoire-feature-calculation","dir":"Articles","previous_headings":"Descriptive statistics","what":"Repertoire feature calculation","title":"Data exploration","text":"countFeatures() returns calculated values samples within RepSeqExperiment object. function takes account weight studied level, .e. number sequences expressing specific gene segment, count sequence sample.","code":"countFeatures(x = RepSeqData,                level = \"J\",                scale = \"frequency\")"},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/exploratory.html","id":"rarefaction-analysis","dir":"Articles","previous_headings":"Richness and diversity estimation","what":"Rarefaction analysis","title":"Data exploration","text":"evaluate clonotype richness sequencing depth sample, rarefaction curve can plotted, illustrates relationship number sequences randomly selected sample number clones represent. plateau curve suggests sampling yielding new species, observed clonotype richness approaching true richness sequenced sample. contrast, steep ascending curve indicates additional sequencing may still yield new clones. Rarefaction curves can plotted using plotRarefaction(). colorBy parameter used assign colors curves based group column metaData slot, facetBy separate samples based different set group columns. Figure 3: Rarefaction curves plotting number clones number sequences sample.","code":"plotRarefaction(x = RepSeqData,                 colorBy = \"sample_id\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/exploratory.html","id":"richness-estimation","dir":"Articles","previous_headings":"Richness and diversity estimation","what":"Richness estimation","title":"Data exploration","text":"calculate number clones observed sample, Chao index can used, estimates total clone richness sample including clones likely present unseen undetected. Together, Chao1 index rarefaction curves serve complementary roles. Rarefaction curves assess sufficiency sampling effort provide visual representation species accumulation, Chao1 index estimates total species richness considering rare species. Chao index, values available metaData slot, can plotted using plotStatScatter() function. function plots values two statistics along two axes, showing relationship . Chao values can thus plotted number observed ntClones instance, evaluate difference number observed unseen clones. Figure 4: Chao1 richness estimation plotted function observed number ntClones sample. diagonal dashed line represents reference line.  Note: plotStatScatter() function can used compare two numerical values metaData slot.","code":"plotStatScatter(x = RepSeqData,                  stat1 = \"chao1\",                  stat2 = \"ntClone\",                  colorBy = \"sample_id\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/exploratory.html","id":"diversity-indices","dir":"Articles","previous_headings":"Richness and diversity estimation","what":"Diversity indices","title":"Data exploration","text":"function diversityIndices() computes set diversity indices chosen repertoire level sample. calculated indices following: Shannon index: Calculates proportional abundance species repertoire (Shannon, 1948). Simpson index: measure taking account number species present well abundance. gives relatively little weight rare species weight frequent ones (Simpson, 1949). Inverse Simpson index: effective number species obtained weighted arithmetic mean used quantify average proportional abundance species. Berger-Parker index: Expresses proportional importance abundant species. metric highly biased sample size richness (Berger Parker 1970). Gini coefficient: Measures degree inequality distribution abundances (Gini, 1921). calculated indices can downloaded table use visualization platforms tailor presentation data address specific research needs. Alternatively, using plotDiversity() function AnalyzAIRR, possible calculate plot indices one step. parameter index allows choose index plotted. Figure 4: barplot showing Shannon values calculated ntClone level within sample.","code":"diversityIndices(x = RepSeqData,                   level = \"aaClone\") plotDiversity(x = RepSeqData,               level = \"ntClone\",               index = \"shannon\",               colorBy = \"sample_id\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/exploratory.html","id":"renyi-diversity","dir":"Articles","previous_headings":"Richness and diversity estimation","what":"Renyi diversity","title":"Data exploration","text":"Renyi index generalization Shannon entropy. represents distribution clonal expansions function parameter alpha. equally considers species including rare ones alpha=0, -weighs abundant species increasing value alpha. Alpha =1 approximation Shannon index; alpha = 2 corresponds Simpson index alpha=Inf corresponds Berger-Parker index. latter highlights highest clonal expansion repertoire. Renyi values can computed repertoire level using renyiIndex(). default, assessed following alpha values: α∈0,0.25,0.5,1,2,4,8,16,32,64,Inf\\alpha \\{0, 0.25, 0.5, 1, 2, 4, 8, 16, 32, 64, Inf} Renyi’s entropy values can plotted using plotRenyiIndex(). curve sample plotted colors attributed based colorBy parameter. Figure 5: Renyi values calculated J gene level pre-defined alpha value plotted sample.","code":"renyiIndex(x = RepSeqData,             level = \"aaClone\") plotRenyiIndex(x = RepSeqData,                 level = \"aaClone\",                 colorBy = \"sample_id\",                 facetBy = c(\"cell_subset\", \"sex\"))"},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/exploratory.html","id":"intervals","dir":"Articles","previous_headings":"Clonal distribution","what":"Intervals","title":"Data exploration","text":"Intervals() function can used assess clonal distribution within pre-defined count frequency intervals. computes: proportion repertoire level within interval represents total repertoire, thus giving global evaluation distribution. cumulative frequency repertoire level within interval, thus giving proportion interval occupies repertoire. plotIntervals() function can used plot intervals. Figure 6: Stacked bars showing distribution (upper plot) cumulative frequency (lower plot) clones within count interval sample.","code":"Intervals(x = RepSeqData,            level=\"aaCDR3\",             fractions=\"count\") plotIntervals(x = RepSeqData,                level = \"aaClone\",                fractions = \"frequency\",                facetBy = \"cell_subset\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/exploratory.html","id":"rank","dir":"Articles","previous_headings":"Clonal distribution","what":"Rank","title":"Data exploration","text":"Another way assess clonal distribution visualizing distribution function clone ranks. Samples can colored sample_id well group column mData() slot. ranks parameters allows plot top X ranks within repertoires. colorBy = “sample_id”, color legend hidden visual clarity. However, can easily added example . Figure 7: Clonal distribution function occurrence rank sample.","code":"plotRankDistrib(x = RepSeqData,                 level = \"aaClone\",                  colorBy = \"sample_id\",                  scale = \"frequency\",                 ranks = 1000,                  grouped = FALSE)+   ggplot2::theme(legend.position = \"right\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/gettingstarted.html","id":"devtools","dir":"Articles","previous_headings":"","what":"Devtools","title":"Installation","text":"latest release AnalyzAIRR can installed Github using devtools: Load AnalyzAIRR package","code":"install.packages(\"devtools\")   devtools::install_github(\"vanessajmh/AnalyzAIRR\") library(AnalyzAIRR)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/gettingstarted.html","id":"docker","dir":"Articles","previous_headings":"","what":"Docker","title":"Installation","text":"Docker image AnalyzAIRR tool encapsulating dependencies, required run environments available docker hub vanessajmh/analyzairr. install latest version, following command line can used: Images versioned using tags. install specific version, following command line can used:","code":"docker pull vanessajmh/analyzairr:latest docker pull vanessajmh/analyzairr:v1.0.0"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"metadata-statistics","dir":"Articles","previous_headings":"","what":"MetaData statistics","title":"Cross-sample analysis","text":"calculated statistics metaData slot can compared groups samples. possible using plotStatistics() function setting grouped parameter TRUE specifying one group column metadata slot compare colorBy parameter, two columns facetBy parameter. Figure 1: Comparison number ntClones amTreg nTreg samples. Boxplots represent median across samples belonging group.","code":"plotStatistics(x = RepSeqData,                stat = \"ntClone\",                colorBy = \"cell_subset\",                 facetBy = \"sex\",                grouped = TRUE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"gene-usage","dir":"Articles","previous_headings":"MetaData statistics","what":"Gene usage","title":"Cross-sample analysis","text":"plotGeneUsage() allows comparison V J gene usages groups samples using colorBy parameter. Figure 2: Comparison J gene usage amTreg nTreg samples. Wilcoxon test performed. significant values plotted.","code":"plotGeneUsage(x = RepSeqData,                level = \"J\",                scale = \"frequency\",                colorBy = \"cell_subset\",               show_stats = TRUE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"repertoire-diversity","dir":"Articles","previous_headings":"MetaData statistics","what":"Repertoire diversity","title":"Cross-sample analysis","text":"Diversity indices can compared groups samples using plotDiversity() function grouped parameter set TRUE, groups analysed specified colorBy parameter. Figure 3: Shannon index calculated aaClone level compared cell subsets. Boxplots represent median across samples belonging group. Wilcoxon test applied adjusted p-values using Holm method shown.  Renyi index also supports grouped parameter. Figure 4: Renyi values calculated aaClone level pre-defined alpha value. specified group, mean (circles) stantard error (shade) plotted.","code":"plotDiversity(x = RepSeqData,               level = \"aaClone\",               index = \"shannon\",               colorBy = \"cell_subset\",               grouped = TRUE,               show_stats = TRUE) plotRenyiIndex(x = RepSeqData,                level = \"aaClone\",                colorBy = \"cell_subset\",                grouped = TRUE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"clonal-distribution","dir":"Articles","previous_headings":"MetaData statistics","what":"Clonal distribution","title":"Cross-sample analysis","text":"Similarly analysis applied single-sample level, plotIntervals() allows plot compare clonal distributions within defined count intervals experimental groups. Figure 5: distribution (upper plot) cumulative frequency (bottom plot) aaClones within count interval compared amTreg nTreg samples within sex. Wilcoxon test applied adjusted p-values using Holm method shown.","code":"plotIntervals(x = RepSeqData,                level = \"aaClone\",                colorBy = \"cell_subset\",                fractions = \"count\",                grouped = TRUE,               show_stats = TRUE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"similarity-analysis","dir":"Articles","previous_headings":"","what":"Similarity analysis","title":"Cross-sample analysis","text":"repertoire sharing level evaluates degree convergence repertoires experimental conditions. Different statistical methods proposed herein evaluate convergence.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"repertoire-overlap","dir":"Articles","previous_headings":"Similarity analysis","what":"Repertoire overlap","title":"Cross-sample analysis","text":"number shared sequences, level, samples belonging instance experimental group can obtained using plotVenn() function. sampleNames specified, first 3 samples datasets analyzed. Figure 6: Venn diagram representing number shared aaClones nTreg samples.","code":"ctrnames <- rownames(mData(RepSeqData))[which(mData(RepSeqData)[,\"cell_subset\" ] %in% \"nTreg\")] plotVenn(x = RepSeqData,          level = \"aaClone\",          sampleNames = ctrnames)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"correlation-between-pairs-of-samples","dir":"Articles","previous_headings":"Similarity analysis","what":"Correlation between pairs of samples","title":"Cross-sample analysis","text":"correlation pair repertoires can calculated using plotScatter() function simply specifying two sampleNames compare. Figure 7: biplot comparing V gene usage two defined samples. linear model fitted data. V usage significantly similar two samples.  also possible compare, instance, samples beloging specific group. example , scatter plots drawn pairwise nTreg samples. Figure 8: biplot comparing clonal expression two defined samples. linear model fitted data. Clonal overlap expression significantly low compared samples.","code":"plotScatter(x = RepSeqData,             level = \"V\",             scale = \"frequency\",             sampleNames = c(\"tripod-30-813\",\"tripod-31-846\")) names<- as.character(RepSeqData@metaData$sample_id[RepSeqData@metaData$cell_subset==\"nTreg\"])  plotScatter(x = RepSeqData,             level = \"VJ\",             scale = \"frequency\",             sampleNames = names)+   ggplot2::theme(axis.text = ggplot2::element_text(size=7))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"dissimilarity-indices","dir":"Articles","previous_headings":"Similarity analysis","what":"Dissimilarity indices","title":"Cross-sample analysis","text":"AnalyzAIRR proposes list dissimilarity indices, taking account different parameters. proposed methods include: Jaccard similarity: measure similarity sample sets defined size intersection divided size union sample sets. Morisita-Horn similarity: measure similarity tends -sensitive abundant species. Details indices others can found distances can calculated level repertoire can : Visualized dissimilarity heatmap setting plot Heatmap. function performs hierarchical clustering calculated distance scores using method specified clustering parameter. Figure 9: heatmap showing Morisita distances calculated aaClone level pairwise samples. ward D method used perform hierarchical clustering.  Used perform multidimensional scaling analysis setting plot MDS. case, clustering method needed. Figure 25: Morisita distances calculated aaClone level pairwise samples within dataset used perform multidimensional scaling analysis.","code":"plotDissimilarity(x = RepSeqData,                   level = \"aaClone\",                   method = \"morisita\",                   clustering = \"ward.D\",                   colorBy = c(\"sex\",\"cell_subset\"),                   plot = \"Heatmap\") plotDissimilarity(x = RepSeqData,                  level = \"aaClone\",                  method = \"morisita\",                  colorBy = \"cell_subset\",                  plot = \"MDS\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"differential-analysis","dir":"Articles","previous_headings":"","what":"Differential analysis","title":"Cross-sample analysis","text":"Differentially expressed genes sequences can identified using diffExpGroup. experimental groups compared can specified group parameter, function outputs statistics calculated gene/sequence. following example, identify -expressed VJ combinations within amTreg samples compared nTregs.  results can visualized using plotDiffExp function volcano plot. Users can specify number top differentially expressed genes/sequences identified plot using top parameter. also possible choose log2FoldChange adjusted pvalue threshold, based - -expression defined. default, parameters fixed 2 0.05 respectively. Figure 26: volcano plot showing differentially expressed VJ combinations amTreg nTreg samples. -expressed combinations amTreg population shown red.","code":"DS <- diffExpGroup(x = RepSeqData,                    colGrp = \"cell_subset\" ,                    level = \"VJ\",                    group = c(\"cell_subset\", \"amTreg\", \"nTreg\")) plotDiffExp(x = RepSeqData,             top = 10,             level = \"VJ\",             group = c(\"cell_subset\", \"amTreg\", \"nTreg\"))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/multisample.html","id":"spectratyping-comparison","dir":"Articles","previous_headings":"","what":"Spectratyping comparison","title":"Cross-sample analysis","text":"perturbationScore() function computes perturbation scores aaCDR3 length distribution within V gene distance repertoire mean repertoire control group. Scores can visualized heatmap using plotPerturbationScore() function. parameter order allows define order samples plotted heatmap helps better separation control groups samples. Figure 28: heatmap plotting perturbation scores aaCDR3 length distribution within V gene amTreg population compared nTregs (used reference). parameter order allows define order samples plotted heatmap helps better separation control groups samples.","code":"ctrnames <- rownames(mData(RepSeqData))[which(mData(RepSeqData)[,\"cell_subset\" ] %in% \"nTreg\")] perturbationScore(x = RepSeqData,                    ctrl.names = ctrnames,                    distance = \"euclidean\") plotPerturbationScore(x = RepSeqData,                        ctrl.names = ctrnames,                        distance = \"euclidean\",                        order = \"cell_subset\")"},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/onesample.html","id":"basic-statistics","dir":"Articles","previous_headings":"Repertoire statistics","what":"Basic statistics","title":"Single sample analysis","text":"plotIndStatistics() function allows positioning sample interest within whole dataset, based set statistic metrics. Boxplots drawn whole dataset values, sample interest highlighted red cross. allows comparison sample whole dataset, detection sample outliers. plot statistics metaData slot, stat parameter set statistics metaData slot. Figure 1: Boxplots showing metadata statistics calculated dataset samples. sample interest represented red cross.","code":"plotIndStatistics(x = RepSeqData,                    stat = \"metadata\",                     level = \"aaClone\") #> Plot the first sample in the dataset: tripod-30-813"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/onesample.html","id":"diversity-indices","dir":"Articles","previous_headings":"Repertoire statistics","what":"Diversity indices","title":"Single sample analysis","text":"plotIndStatistics() function can also used plot diversity indices setting stat parameter diversity. Figure 2: Boxplots showing different diversity indices calculated dataset samples. sample interest represented red cross.","code":"plotIndStatistics(x = RepSeqData,                    stat = \"diversity\",                     level = \"aaClone\") #> Plot the first sample in the dataset: tripod-30-813"},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/onesample.html","id":"tree-map","dir":"Articles","previous_headings":"Clonal distribution","what":"Tree map","title":"Single sample analysis","text":"visualize repertoire structure top clone distribution repertoire, plotIndMap() can used plot circular treemap circle represents unique clone, circle size corresponds clone count. Users can choose proportion top clones plot using prop parameter. recommend plot top 10,000 clones, higher values might generate difficult--interpret visuals. Figure 3: circular treemap generated one single sample shows structure top 1% aaClones sample repertoire. circle represents unique aaClone, circle size corresponds aaClone count.","code":"plotIndMap(x = RepSeqData,             sampleName=  NULL,             level = \"aaClone\",             prop = 0.01) #> Plot the first sample in the dataset: tripod-30-813"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/onesample.html","id":"intervals","dir":"Articles","previous_headings":"Clonal distribution","what":"Intervals","title":"Single sample analysis","text":"plotIndIntervals() function can used quantitatively analyze plot, evaluating clonal distribution per intervals counts fractions single sample. Figure 4: Barplots showing distribution (upper plot) cumulative frequency (lower plot) aaClone within frequency interval one selected sample.","code":"plotIndIntervals(x = RepSeqData,                   level = \"aaClone\",                   sampleName = \"tripod-30-813\",                   fractions = \"frequency\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/onesample.html","id":"v-and-j-gene-usages","dir":"Articles","previous_headings":"","what":"V and J gene usages","title":"Single sample analysis","text":"V-J combination usages can visualized heatmap using plotIndGeneUsage() function. parameter level allows choose whether compute gene usages ntClone aaClone level. V J gene usages plotted separately top right side heatmap, allowing better view individual gene distribution. Figure 5: Heatmap V J combination usage one selected sample. Frequencies, represented color scale, scaled column-wise. Barplots top right side heatmap show usage gene across row column V J genes, respectively.","code":"plotIndGeneUsage(x = RepSeqData,                  level = \"aaClone\",                  sampleName = NULL) #> Plot the first sample in the dataset: tripod-30-813"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/onesample.html","id":"cdr3-spectratyping","dir":"Articles","previous_headings":"","what":"CDR3 Spectratyping","title":"Single sample analysis","text":"Spectratyping analyzes CDR3 amino acid length distribution sample. Using plotSpectratyping(), possible add V gene usage information per CDR3 length. proportion used genes within repertoire can specified prop parameter, thus showing relative proportions within CDR3 length. Figure 6: CDR3 spectratyping one selected sample. 10% frequent V genes distinctively coloured.","code":"#Show the top 10% plotSpectratyping(x = RepSeqData,                    scale = \"frequency\",                   prop = 0.1) #> Plot the first sample in the dataset: tripod-30-813"},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/shiny.html","id":"installation-of-the-analyzairr-package","dir":"Articles","previous_headings":"Installation","what":"Installation of the AnalyzAIRR package","title":"Shiny-AnalyzAIRR","text":"latest release AnalyzAIRR can installed Github using devtools:","code":"devtools::install_github(\"vanessajmh/AnalyzAIRR\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/shiny.html","id":"installation-of-shiny-analyzairr","dir":"Articles","previous_headings":"Installation","what":"Installation of Shiny-AnalyzAIRR","title":"Shiny-AnalyzAIRR","text":"Shiny-AnalyzAIRR cloned command line follow: downloaded, Shiny-AnalyzAIRR can launched terminal: Alternatively, can run Rstudio: interface can opened web browser using displayed hyper link address.","code":"git clone https://github.com/i3-unit/Shiny-AnalyzAIRR.git # Go to the Shiny-AnalyzAIRR folder cd Shiny-AnalyzAIRR # Launch R and shiny R -e 'shiny::runApp(\"./\")' # Open the global.R file in RStudio and run: shiny::runApp(\"./\")"},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/shiny.html","id":"uploading-a-repseqexperiment-object","dir":"Articles","previous_headings":"Data loading","what":"Uploading a RepSeqExperiment object","title":"Shiny-AnalyzAIRR","text":"RepSeqExperiment object generated using AnalyzAIRR R package saved rds format can loaded directly Shiny","code":""},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/shiny.html","id":"file-source","dir":"Articles","previous_headings":"Data loading > Uploading alignment data files","what":"File source","title":"Shiny-AnalyzAIRR","text":"Different alignment file formats supported package. details AnalyzAIRR-supported input data can found .","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/shiny.html","id":"metadata","dir":"Articles","previous_headings":"Data loading > Uploading alignment data files","what":"Metadata","title":"Shiny-AnalyzAIRR","text":"possible provide metadata users wish perform inter-group comparative analyses. metadata provided table containing: column sample names match name alignment files order list. one column containing sample names provided metadata file. column assigned row.names argument loading metadata. additional columns relevant information analyses. Columns encompass experimental conditions, clinical variables, etc… specific column names order required. Additional information metadata can found .","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/shiny.html","id":"choice-of-chain-to-analyze","dir":"Articles","previous_headings":"Data loading > Uploading alignment data files","what":"Choice of chain to analyze","title":"Shiny-AnalyzAIRR","text":"chain type analyzed chosen. Users can choose one following: “TRA”, “TRB”,“TRG” “TRD” TCR repertoires “IGH”,“IGK” “IGL” BCR repertoires files loaded, Shiny-AnalyZAIRR automatically creates loads RepSeqExperiment object. object used input functions. details RepSeqExperiment object structure, visit page. example data included illustrate functionalities package.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/articles/shiny.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Shiny-AnalyzAIRR","text":"data successfully loaded, summary dataset displayed home page. summary include: total number samples dataset number groups found metadata total number sequences across samples sequence number overview illustrates distribution sample sizes within dataset, sample’s size quantified sequence count count distribution showing clone count distribution sample within dataset package offers various statistical metrics visualization methods, allowing complete data exploration well cross-sample comparisons answer defined biological questions. detailed description AnalyzAIRR’s functionalities can found different sections documentation.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Vanessa Mhanna. Author, maintainer. Gabriel Pires. Author. Grégoire Bohl. Author. Karim El Soufi. Author. Nicolas Tchitchek. Author. David Klatzmann. Author. Adrien Six. Author. Hang-Phuong Pham. Author. Encarnita Mariotti-Ferrandiz. Author.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mhanna V, Pires G, Bohl G, El Soufi K, Tchitchek N, Klatzmann D, Six , Pham H, Mariotti-Ferrandiz E (2024). AnalyzAIRR: R package developed analyze bulk Ig/TCR repertoire datasets. R package version 1.2.0, https://github.com/i3-unit/AnalyzAIRR.","code":"@Manual{,   title = {AnalyzAIRR: R package developed to analyze bulk Ig/TCR repertoire datasets},   author = {Vanessa Mhanna and Gabriel Pires and Grégoire Bohl and Karim {El Soufi} and Nicolas Tchitchek and David Klatzmann and Adrien Six and Hang-Phuong Pham and Encarnita Mariotti-Ferrandiz},   year = {2024},   note = {R package version 1.2.0},   url = {https://github.com/i3-unit/AnalyzAIRR}, }"},{"path":"https://i3-unit.github.io/AnalyzAIRR/index.html","id":"analyzairr","dir":"","previous_headings":"","what":"R package developed to analyze bulk Ig/TCR repertoire datasets","title":"R package developed to analyze bulk Ig/TCR repertoire datasets","text":"AnalyzAIRR R package developed analyze bulk Ig/TCR repertoire datasets. proposes analytical routine starting data exploration, leading -depth statistical comparisons aim answering defined biological questions. allows calculation set diversity measures statistical metrics applicable level granularity. offers different types data visualization ready--publish graphics can easily personalized.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/index.html","id":"shiny-interface","dir":"","previous_headings":"","what":"Shiny interface","title":"R package developed to analyze bulk Ig/TCR repertoire datasets","text":"Shiny web application developed AnalyzAIRR making user-friendly biologists little background bioinformatics. application can downloaded Github repository.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/index.html","id":"support","dir":"","previous_headings":"","what":"Support","title":"R package developed to analyze bulk Ig/TCR repertoire datasets","text":"questions regarding installation AnalyzAIRR, bug reports feature requests, please submit issue.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/AnalyzAIRR.html","id":null,"dir":"Reference","previous_headings":"","what":"AnalyzAIRR - AIRR-compliant R package for the analysis of bulk Ig/TCR repertoire datasets — AnalyzAIRR","title":"AnalyzAIRR - AIRR-compliant R package for the analysis of bulk Ig/TCR repertoire datasets — AnalyzAIRR","text":"AnalyzAIRR AIRR-compliant R package developed analyze bulk Ig/TCR repertoire datasets.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/AnalyzAIRR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"AnalyzAIRR - AIRR-compliant R package for the analysis of bulk Ig/TCR repertoire datasets — AnalyzAIRR","text":"AnalyzAIRR allows general data exploration evaluate homogeneity within defined groups, identify outliers filter . AnalyzAIRR also proposes set diversity measures statistical metrics applicable level granularity. Thus, single-sample repertoire explorations -depth cross-comparisons AIRR datasets can conducted leading ready--publish visualization graphics. AnalyzAIRR complemented guided workflow help users analytical strategy, Shiny web application making user-friendly biologists little background bioinformatics.","code":""},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/AnalyzAIRR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"AnalyzAIRR - AIRR-compliant R package for the analysis of bulk Ig/TCR repertoire datasets — AnalyzAIRR","text":"Vanessa Mhanna Gabriel Pires Grégoire Bohl Karim El Soufi Nicolas Tchitchek David Klatzmann Adrien Six Hang-Phuong Pham Encarnita Mariotti-Ferrandiz","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/CalcDissimilarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of repertoire dissimilarities — CalcDissimilarity","title":"Calculation of repertoire dissimilarities — CalcDissimilarity","text":"function assesses pairwise repertoire dissimilarities using specific dissimilarity method. calculates list dissimilarity indices, taking account different parameters. proposed methods include: Jaccard similarity: measure similarity sample sets defined size intersection divided size union sample sets. Morisita-Horn similarity: measure similarity tends -sensitive abundant species. #'","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/CalcDissimilarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of repertoire dissimilarities — CalcDissimilarity","text":"","code":"CalcDissimilarity(   x,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\"),   method = c(\"manhattan\", \"euclidean\", \"canberra\", \"clark\", \"bray\", \"kulczynski\",     \"jaccard\", \"gower\", \"altGower\", \"morisita\", \"horn\", \"mountford\", \"raup\", \"binomial\",     \"chao\", \"cao\", \"mahalanobis\"),   binary = FALSE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/CalcDissimilarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of repertoire dissimilarities — CalcDissimilarity","text":"x object class RepSeqExperiment level character specifying level repertoire indices computed. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\". method character specifying distance method computed. one following: \"manhattan\", \"euclidean\", \"canberra\", \"clark\", \"bray\", \"kulczynski\", \"jaccard\", \"gower\", \"altGower\", \"morisita\", \"horn\", \"mountford\", \"raup\", \"binomial\", \"chao\", \"cao\", \"mahalanobis.\" binary boolean indicating whether transform data presence/absence data. Default FALSE","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/CalcDissimilarity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculation of repertoire dissimilarities — CalcDissimilarity","text":"Details calculated indices can found vegan package: https://www.rdocumentation.org/packages/vegan/versions/2.4-2/topics/vegdist","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/CalcDissimilarity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of repertoire dissimilarities — CalcDissimilarity","text":"","code":"data(RepSeqData)  CalcDissimilarity(x = RepSeqData, level = \"aaClone\", method = \"jaccard\", ) #>                tripod-30-813 tripod-30-815 tripod-31-846 tripod-31-848 #> tripod-30-813      0.0000000     0.8931348     0.9144536     0.9038003 #> tripod-30-815      0.8931348     0.0000000     0.8940650     0.8446051 #> tripod-31-846      0.9144536     0.8940650     0.0000000     0.8910004 #> tripod-31-848      0.9038003     0.8446051     0.8910004     0.0000000 #> tripod-35-970      0.9328096     0.9194625     0.9163329     0.9220105 #> tripod-35-972      0.9186142     0.8611012     0.8940951     0.8619932 #> tripod-36-1003     0.9466151     0.9160904     0.9338109     0.9187537 #> tripod-36-1005     0.9511236     0.9415172     0.9301657     0.9413546 #>                tripod-35-970 tripod-35-972 tripod-36-1003 tripod-36-1005 #> tripod-30-813      0.9328096     0.9186142      0.9466151      0.9511236 #> tripod-30-815      0.9194625     0.8611012      0.9160904      0.9415172 #> tripod-31-846      0.9163329     0.8940951      0.9338109      0.9301657 #> tripod-31-848      0.9220105     0.8619932      0.9187537      0.9413546 #> tripod-35-970      0.0000000     0.9047477      0.9421167      0.9363615 #> tripod-35-972      0.9047477     0.0000000      0.9122772      0.9313937 #> tripod-36-1003     0.9421167     0.9122772      0.0000000      0.9446215 #> tripod-36-1005     0.9363615     0.9313937      0.9446215      0.0000000"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/Intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of the clonal distribution per interval — Intervals","title":"Calculation of the clonal distribution per interval — Intervals","text":"function calculates clonal distribution per set intervals samples within dataset. column titled \"Distribution\" calculates proportion interval whole repertoire, whereas one titled \"Cumulative frequency\" shows cumulative frequency sequences within interval. allow global view repertoire fraction contributing repertoire. instance, top sequences belonging highest interval often constitute low fraction whole repertoire contribute significantly terms cumulative frequency view high occurrence.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/Intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of the clonal distribution per interval — Intervals","text":"","code":"Intervals(   x,   level = c(\"aaClone\", \"ntClone\", \"ntCDR3\", \"aaCDR3\"),   fractions = c(\"count\", \"frequency\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/Intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of the clonal distribution per interval — Intervals","text":"x object class  RepSeqExperiment level character specifying level repertoire taken account calculating clonal distribution. one \"aaClone\",\"ntClone\", \"ntCDR3\" \"aaCDR3\". fractions whether intervals determined count frequency","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/Intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of the clonal distribution per interval — Intervals","text":"","code":"data(RepSeqData)  Intervals(x = RepSeqData, level=\"aaCDR3\",  fractions=\"count\") #> Key: <interval, sample_id> #>          interval      sample_id cumulative_freq distribution #>            <char>         <char>           <num>        <num> #>  1:             1  tripod-30-813     0.032142515 2.816291e-01 #>  2:             1  tripod-30-815     0.026025773 2.165462e-01 #>  3:             1  tripod-31-846     0.012486036 1.901232e-01 #>  4:             1  tripod-31-848     0.025593745 2.195010e-01 #>  5:             1  tripod-35-970     0.004007402 1.215035e-01 #>  6:             1  tripod-35-972     0.009549873 1.348806e-01 #>  7:             1 tripod-36-1003     0.002785737 9.942236e-02 #>  8:             1 tripod-36-1005     0.001627905 8.973861e-02 #>  9:       ]1, 10]  tripod-30-813     0.262880688 5.532576e-01 #> 10:       ]1, 10]  tripod-30-815     0.331110991 6.157322e-01 #> 11:       ]1, 10]  tripod-31-846     0.169449311 5.458566e-01 #> 12:       ]1, 10]  tripod-31-848     0.315700372 6.036205e-01 #> 13:       ]1, 10]  tripod-35-970     0.067115410 3.441734e-01 #> 14:       ]1, 10]  tripod-35-972     0.195239389 5.546083e-01 #> 15:       ]1, 10] tripod-36-1003     0.027484292 1.843059e-01 #> 16:       ]1, 10] tripod-36-1005     0.015337740 1.673793e-01 #> 17:     ]10, 100]  tripod-30-813     0.464136987 1.550219e-01 #> 18:     ]10, 100]  tripod-30-815     0.476022205 1.603783e-01 #> 19:     ]10, 100]  tripod-31-846     0.439794682 2.403130e-01 #> 20:     ]10, 100]  tripod-31-848     0.485571430 1.690793e-01 #> 21:     ]10, 100]  tripod-35-970     0.457990320 4.824405e-01 #> 22:     ]10, 100]  tripod-35-972     0.541043597 2.932530e-01 #> 23:     ]10, 100] tripod-36-1003     0.671988051 6.590954e-01 #> 24:     ]10, 100] tripod-36-1005     0.436849708 6.252551e-01 #> 25:   ]100, 1000]  tripod-30-813     0.227342490 1.002336e-02 #> 26:   ]100, 1000]  tripod-30-815     0.160403782 7.299799e-03 #> 27:   ]100, 1000]  tripod-31-846     0.331085737 2.320584e-02 #> 28:   ]100, 1000]  tripod-31-848     0.165559014 7.741676e-03 #> 29:   ]100, 1000]  tripod-35-970     0.374017035 5.019330e-02 #> 30:   ]100, 1000]  tripod-35-972     0.242928712 1.715391e-02 #> 31:   ]100, 1000] tripod-36-1003     0.289180340 5.698061e-02 #> 32:   ]100, 1000] tripod-36-1005     0.467035141 1.151977e-01 #> 33: ]1000, 10000]  tripod-30-813     0.013497320 6.803184e-05 #> 34: ]1000, 10000]  tripod-30-815     0.006437249 4.345118e-05 #> 35: ]1000, 10000]  tripod-31-846     0.047184233 5.013608e-04 #> 36: ]1000, 10000]  tripod-31-848     0.007575440 5.755893e-05 #> 37: ]1000, 10000]  tripod-35-970     0.096869833 1.689354e-03 #> 38: ]1000, 10000]  tripod-35-972     0.011238429 1.041434e-04 #> 39: ]1000, 10000] tripod-36-1003     0.008561580 1.958097e-04 #> 40: ]1000, 10000] tripod-36-1005     0.079149506 2.429307e-03 #>          interval      sample_id cumulative_freq distribution"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqData.html","id":null,"dir":"Reference","previous_headings":"","what":"RepSeqData — RepSeqData","title":"RepSeqData — RepSeqData","text":"RepSeqExperiment object built using published TCR repertoire dataset healthy murine cell populations (Mhanna et al., 2021). Files aligned using MiXCR following MiAIRR standardsare available extdata/MiAIRR.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RepSeqData — RepSeqData","text":"","code":"data(RepSeqData)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RepSeqData — RepSeqData","text":"RepSeqExperiment object gz-compressed txt/csv tab-delimited: system.file(file.path('extdata/MiAIRR'), package='AnalyzAIRR') Aligned data sets using MiXCR exported MiAIRR standards. system.file(file.path('extdata/sampledata.txt'), package='AnalyzAIRR') Metadata","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqExp.html","id":null,"dir":"Reference","previous_headings":"","what":"An alternative method for the building of a RepSeqExperiment object — RepSeqExp","title":"An alternative method for the building of a RepSeqExperiment object — RepSeqExp","text":"function can used build RepSeqExperiment object using aligned files produced AnalyzAIRR-supported aligning tool. loaded clonotype table must however contain following required columns: - sample_id: sample names - V: Variable gene name - J: Joining gene name - aaCDR3: amino acid CDR3 sequence - ntCDR3: nucleotide CDR3 sequence - aaClone: Full clone sequence including V gene, amino acid CDR3 sequence J gene - VJ: V-J gene combination using V J gene names - ntClone: Full clone sequence including V gene, nucleotide CDR3 sequence J gene - count: occurrence clone Clonotype tables must contain single chain. paired-chain analysis provided AnalyzAIRR package. Pre-filtered files obtained using filterClones function can used input.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An alternative method for the building of a RepSeqExperiment object — RepSeqExp","text":"","code":"RepSeqExp(clonotypetab, sampleinfo = NULL)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An alternative method for the building of a RepSeqExperiment object — RepSeqExp","text":"clonotypetab single clonotype table containing previously cited columns sampleinfo data frame containing: - column sample names. Names match base names corresponding files order. column assigned row.names metadata file loaded. See example . - additional columns relevant information subsequent analyses. Group columns must transformed factors loading. See example . specific column names required.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An alternative method for the building of a RepSeqExperiment object — RepSeqExp","text":"object class RepSeqExperiment  used analytical metrics proposed AnalyzAIRR package. See RepSeqExperiment-class details.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqExperiment-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The class RepSeqExperiment — RepSeqExperiment-class","title":"The class RepSeqExperiment — RepSeqExperiment-class","text":"S4 class object enclosing adaptive immune repertoire data, used analytical metrics proposed AnalyzAIRR package. RepSeqExperiment object composed 4 slots, containing different information. [] Extract parts RepSeqExperiment object","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqExperiment-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The class RepSeqExperiment — RepSeqExperiment-class","text":"","code":"assay(object)  assay(object, i, j) <- value  oData(object)  oData(object) <- value  mData(object)  mData(object) <- value  History(object)  History(object) <- value  # S4 method for class 'RepSeqExperiment' assay(object)  # S4 method for class 'RepSeqExperiment' assay(object, i, j) <- value  # S4 method for class 'RepSeqExperiment' oData(object)  # S4 method for class 'RepSeqExperiment' oData(object) <- value  # S4 method for class 'RepSeqExperiment' mData(object)  # S4 method for class 'RepSeqExperiment' mData(object) <- value  # S4 method for class 'RepSeqExperiment' History(object)  # S4 method for class 'RepSeqExperiment' History(object) <- value  # S4 method for class 'RepSeqExperiment' show(object)  # S4 method for class 'RepSeqExperiment' names(x)  # S4 method for class 'RepSeqExperiment,ANY' names(x) <- value  # S4 method for class 'RepSeqExperiment,ANY,ANY,ANY' x[i, j, drop]  is.RepSeqExperiment(x)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqExperiment-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The class RepSeqExperiment — RepSeqExperiment-class","text":"object RepSeqExperiment object indice(s) clone(s) extract j indice(s) sample(s) extract value either numeric, character data frame x object drop TRUE result coerced lowest possible dimension","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqExperiment-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The class RepSeqExperiment — RepSeqExperiment-class","text":"object class [RepSeqExperiment]","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/RepSeqExperiment-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The class RepSeqExperiment — RepSeqExperiment-class","text":"assayData data.table binding clonotype tables containing following columns: - sample_id: sample names - ntCDR3: nucleotide CDR3 sequence - aaCDR3: amino acid CDR3 sequence - V: Variable gene name - J: Joining gene name - VJ: V-J gene combination - aaClone: Full sequence including V gene, CDR3 amino acid sequence J gene - ntClone: Full sequence including V gene, CDR3 nucleotide sequence J gene - count: occurrence clone sequence metaData data frame containing sample information specified building RepSeqExperiment object. row represents sample, columns possible information group can attributed samples cell population, donor's age, sex, etc... Summary statistics assayData slot also calculated sample, well Chao richness estimation. otherData list data frames containing sequences filtered RepSeqExperiment object case filtering functions applied. History data frame registering operations performed RepSeqExperiment object, filtering functions normalization.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/ShannonNorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Shannon normalization of repertoires — ShannonNorm","title":"Shannon normalization of repertoires — ShannonNorm","text":"function allows normalize repertoires using Shannon entropy threshold, thus eliminating rare sequences. described (Chaara et al., 2018) used eliminate “uninformative” sequences resulting experimental noise. particularly efficient applied small samples corrects altered count distributions caused high-sequencing depth. Sequences eliminated method stored oData slot.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/ShannonNorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shannon normalization of repertoires — ShannonNorm","text":"","code":"ShannonNorm(x)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/ShannonNorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shannon normalization of repertoires — ShannonNorm","text":"x object class RepSeqExperiment","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/ShannonNorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shannon normalization of repertoires — ShannonNorm","text":"new RepSeqExperiment object normalized data.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/ShannonNorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shannon normalization of repertoires — ShannonNorm","text":"","code":"data(RepSeqData)  RepSeqData_sh<- ShannonNorm(x = RepSeqData) #> Creating a RepSeqExperiment object... #> Done."},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/chaoWor.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjusted Chao1 — chaoWor","title":"Adjusted Chao1 — chaoWor","text":"calculate adjusted Chao1 index","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/chaoWor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjusted Chao1 — chaoWor","text":"","code":"chaoWor(x)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/chaoWor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjusted Chao1 — chaoWor","text":"x vector count. Can list clone counts within given sample.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/chaoWor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjusted Chao1 — chaoWor","text":"computed Chao1 value","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/chaoWor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjusted Chao1 — chaoWor","text":"function computes adjusted Chao1 index sampling without replacement","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/chaoWor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjusted Chao1 — chaoWor","text":"","code":"set.seed(1234) x <- rbinom(20, 5, 0.5) chaoWor(x) #> [1] 19.25855"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/countFeatures.html","id":null,"dir":"Reference","previous_headings":"","what":"Computing the occurrence of any repertoire level — countFeatures","title":"Computing the occurrence of any repertoire level — countFeatures","text":"function calculates occurrence selected repertoire level returns calculated values samples within RepSeqExperiment object. takes account weight studied level, .e. number sequences expressing certain gene segment, count sequence sample.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/countFeatures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computing the occurrence of any repertoire level — countFeatures","text":"","code":"countFeatures(   x,   level = c(\"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\", \"ntClone\", \"aaClone\"),   scale = c(\"count\", \"frequency\"),   group = NULL )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/countFeatures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computing the occurrence of any repertoire level — countFeatures","text":"x object class RepSeqExperiment level character specifying repertoire level analyzed. one \"aaClone\",\"ntClone\",\"aaCDR3\",\"ntCDR3\",\"V\", \"J\",\"VJ\". scale character specifying type occurrence return: \"count\" \"frequency\". group vector character indicating group column name mData one experimental group within column. Samples belonging chosen group analyzed. column must class factor. Default NULL, values calculated samples within dataset.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/countFeatures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computing the occurrence of any repertoire level — countFeatures","text":"data.table summarizing count frequency analyzed level. table, rows correspond repertoire level, columns correspond sample_ids.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/countFeatures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computing the occurrence of any repertoire level — countFeatures","text":"","code":"data(RepSeqData) level_statistics <- countFeatures(x = RepSeqData,                                   level = \"V\",                                   group=c(\"cell_subset\", \"amTreg\"),                                   scale=\"frequency\")  level_statistics <- countFeatures(x = RepSeqData,                                   level = \"J\",                                   group=c(\"sex\", \"F\"),                                   scale=\"count\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpGroup.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential expression analysis — diffExpGroup","title":"Differential expression analysis — diffExpGroup","text":"function identifies differentially expressed repertoire levels groups samples.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpGroup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential expression analysis — diffExpGroup","text":"","code":"diffExpGroup(   x,   colGrp,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\"),   group )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpGroup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential expression analysis — diffExpGroup","text":"x object class RepSeqExperiment colGrp vector character specifying column names mData slot corresponding experimental condition analyzed. level character specifying level repertoire compared. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\". group vector character indicating column name mData slot, well two groups compared.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpGroup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential expression analysis — diffExpGroup","text":"data.frame 6 columns: repertoire level rownames, baseMean, log2FoldChange, lfcSE, stat, pvalue padj columns. table ordered adjusted p-values.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpGroup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential expression analysis — diffExpGroup","text":"function uses DESeq2 package. Briefly, estimates size factors using poscounts method deals zero counts. performs default analysis estimating dispersion using local regression log dispersions log base mean. Finally, generalized linear model fitted using Negative Binomial distribution Wald statistics.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpGroup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential expression analysis — diffExpGroup","text":"","code":"data(RepSeqData) dds1 <- diffExpGroup(x = RepSeqData,                     colGrp = \"cell_subset\" ,                     level = \"V\",                     group = c(\"cell_subset\", \"amTreg\", \"nTreg\")) #> Warning: some variables in design formula are characters, converting to factors #> using pre-existing size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpInd.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential expression analysis between two samples — diffExpInd","title":"Differential expression analysis between two samples — diffExpInd","text":"function compares expression repertoire level two samples. Log-ratios calculated occurrence selected repertoire level two compared samples, differentially expressed genes/sequences identified based user-defined log-ratio threshold.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpInd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential expression analysis between two samples — diffExpInd","text":"","code":"diffExpInd(   x,   sampleNames = NULL,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\"),   scale = c(\"frequency\", \"count\"),   th = 1.5,   remove.zeros = TRUE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpInd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential expression analysis between two samples — diffExpInd","text":"x object class RepSeqExperiment sampleNames vector character sample_ids repertoires drop RepSeqExperiment object. level character specifying repertoire level analyzed. one \"aaClone\",\"ntClone\",\"aaCDR3\",\"ntCDR3\",\"V\", \"J\",\"VJ\". scale character specifying type occurrence take account: \"count\" \"frequency\". th lof2FC threshold used remove.zeros boolean indicating whether repertoire levels completely absent one two compared samples take account calculation.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpInd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential expression analysis between two samples — diffExpInd","text":"data frame containing list differentially expressed repertoire levels, occurrence samples calculated log2FC.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diffExpInd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differential expression analysis between two samples — diffExpInd","text":"","code":"data(RepSeqData)  diff_expression <- diffExpInd(RepSeqData,                                level=\"V\",                                scale=\"frequency\",                                sampleNames = c(\"tripod-30-813\",\"tripod-30-815\"),                                remove.zeros = FALSE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/divLevel.html","id":null,"dir":"Reference","previous_headings":"","what":"Diversity index — divLevel","title":"Diversity index — divLevel","text":"calculate sublist diversity indices gene segments.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/divLevel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diversity index — divLevel","text":"","code":"divLevel(   x,   index = c(\"shannon\", \"simpson\", \"invsimpson\"),   level = c(\"VJ\", \"V\", \"J\"),   norm = TRUE,   base = exp(1) )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/divLevel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diversity index — divLevel","text":"x object class [RepSeqExperiment] index character, diversity index calculate. one \"chaowor\",\"shannon\",\"invsimpson\",\"simpson\" \"gini\". level character, level repertoire estimate. one \"V\", \"J\" \"VJ\". norm boolean, whether compute normalized diversity index, divides computed value log(S), S number observed species repetoire. Default TRUE. base positive complex number, base respect logarithms computed. Default e=exp(1).","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/divLevel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diversity index — divLevel","text":"data.table","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/divLevel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diversity index — divLevel","text":"function computes diversity indices level VJ, V J .","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/divLevel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diversity index — divLevel","text":"","code":"data(RepSeqData)  divLevel(x = RepSeqData, index = \"shannon\", level = \"V\", norm = TRUE) #> Key: <V> #>             V tripod-30-813 tripod-30-815 tripod-31-846 tripod-31-848 #>        <char>         <num>         <num>         <num>         <num> #>   1:    TRAV1         0.884         0.947         0.842         0.947 #>   2:   TRAV10         0.879         0.923         0.856         0.917 #>   3:  TRAV10D         0.842         0.908         0.835         0.905 #>   4:  TRAV10N         0.830         0.946         0.861         0.927 #>   5:   TRAV11         0.869         0.950         0.847         0.942 #>  ---                                                                  #> 100: TRAV9D-2         0.848         0.957         0.865         0.960 #> 101: TRAV9D-3         0.892         0.956         0.844         0.946 #> 102: TRAV9D-4         0.934         0.947         0.869         0.941 #> 103: TRAV9N-3         0.907         0.931         0.862         0.926 #> 104: TRAV9N-4         0.920         0.942         0.892         0.947 #>      tripod-35-970 tripod-35-972 tripod-36-1003 tripod-36-1005 #>              <num>         <num>          <num>          <num> #>   1:         0.833         0.942          0.945          0.836 #>   2:         0.885         0.923          0.946          0.908 #>   3:         0.828         0.902          0.927          0.892 #>   4:         0.864         0.932          0.921          0.899 #>   5:         0.792         0.933          0.952          0.892 #>  ---                                                           #> 100:         0.852         0.910          0.916          0.879 #> 101:         0.734         0.938          0.938          0.885 #> 102:         0.897         0.865          0.833          0.975 #> 103:         0.845         0.925          0.890          0.882 #> 104:         0.852         0.930          0.944          0.909  divLevel(x = RepSeqData, index = \"simpson\", level = \"J\", norm = FALSE) #> Key: <J> #>          J tripod-30-813 tripod-30-815 tripod-31-846 tripod-31-848 #>     <char>         <num>         <num>         <num>         <num> #>  1: TRAJ11         0.989         0.998         0.995         0.998 #>  2: TRAJ12         0.994         0.998         0.997         0.998 #>  3: TRAJ13         0.984         0.996         0.993         0.996 #>  4: TRAJ15         0.996         0.999         0.991         0.999 #>  5: TRAJ16         0.915         0.997         0.992         0.997 #>  6: TRAJ17         0.995         0.999         0.997         0.999 #>  7: TRAJ18         0.970         0.999         0.978         0.998 #>  8:  TRAJ2         0.991         0.998         0.993         0.998 #>  9: TRAJ21         0.997         0.999         0.997         0.999 #> 10: TRAJ22         0.996         0.998         0.996         0.998 #> 11: TRAJ23         0.995         0.999         0.998         0.999 #> 12: TRAJ24         0.995         0.998         0.994         0.998 #> 13: TRAJ26         0.997         0.999         0.997         0.999 #> 14: TRAJ27         0.997         0.999         0.997         0.999 #> 15: TRAJ28         0.990         0.998         0.992         0.998 #> 16: TRAJ30         0.995         0.999         0.994         0.999 #> 17: TRAJ31         0.995         0.999         0.997         0.999 #> 18: TRAJ32         0.996         0.999         0.998         0.999 #> 19: TRAJ33         0.995         0.999         0.992         0.999 #> 20: TRAJ34         0.997         0.999         0.997         0.999 #> 21: TRAJ35         0.992         0.998         0.993         0.998 #> 22: TRAJ37         0.998         0.999         0.996         0.999 #> 23: TRAJ38         0.992         0.998         0.987         0.998 #> 24: TRAJ39         0.996         0.999         0.994         0.999 #> 25:  TRAJ4         0.994         0.999         0.995         0.999 #> 26: TRAJ40         0.996         0.999         0.995         0.999 #> 27: TRAJ41         0.000         0.444         0.000         0.000 #> 28: TRAJ42         0.995         0.999         0.988         0.999 #> 29: TRAJ43         0.994         0.999         0.994         0.999 #> 30: TRAJ44         0.997         0.998         0.995         0.998 #> 31: TRAJ45         0.988         0.998         0.993         0.999 #> 32: TRAJ47         0.995         0.998         0.994         0.998 #> 33: TRAJ48         0.994         0.999         0.997         0.999 #> 34: TRAJ49         0.996         0.999         0.993         0.999 #> 35:  TRAJ5         0.982         0.997         0.987         0.997 #> 36: TRAJ50         0.996         0.998         0.991         0.998 #> 37: TRAJ52         0.994         0.999         0.995         0.998 #> 38: TRAJ53         0.995         0.998         0.995         0.998 #> 39: TRAJ56         0.996         0.998         0.996         0.999 #> 40: TRAJ57         0.996         0.999         0.994         0.999 #> 41: TRAJ58         0.991         0.998         0.981         0.998 #> 42:  TRAJ6         0.988         0.999         0.995         0.998 #> 43:  TRAJ7         0.994         0.998         0.993         0.998 #> 44:  TRAJ9         0.995         0.999         0.997         0.999 #>          J tripod-30-813 tripod-30-815 tripod-31-846 tripod-31-848 #>     tripod-35-970 tripod-35-972 tripod-36-1003 tripod-36-1005 #>             <num>         <num>          <num>          <num> #>  1:         0.971         0.998          0.994          0.990 #>  2:         0.996         0.998          0.997          0.994 #>  3:         0.974         0.997          0.995          0.987 #>  4:         0.993         0.999          0.998          0.982 #>  5:         0.978         0.997          0.994          0.915 #>  6:         0.992         0.999          0.997          0.996 #>  7:         0.990         0.998          0.997          0.996 #>  8:         0.982         0.996          0.990          0.975 #>  9:         0.995         0.999          0.998          0.995 #> 10:         0.996         0.998          0.997          0.993 #> 11:         0.989         0.999          0.998          0.997 #> 12:         0.992         0.998          0.994          0.978 #> 13:         0.993         0.999          0.998          0.996 #> 14:         0.995         0.999          0.998          0.993 #> 15:         0.984         0.998          0.993          0.985 #> 16:         0.986         0.999          0.997          0.994 #> 17:         0.985         0.999          0.999          0.995 #> 18:         0.995         0.999          0.996          0.995 #> 19:         0.993         0.999          0.997          0.994 #> 20:         0.979         0.999          0.998          0.997 #> 21:         0.985         0.997          0.988          0.981 #> 22:         0.997         0.999          0.998          0.995 #> 23:         0.989         0.998          0.990          0.988 #> 24:         0.994         0.999          0.997          0.995 #> 25:         0.992         0.999          0.997          0.984 #> 26:         0.996         0.999          0.998          0.996 #> 27:         0.000         0.000          0.000          0.000 #> 28:         0.994         0.999          0.997          0.994 #> 29:         0.981         0.999          0.997          0.995 #> 30:         0.993         0.998          0.995          0.991 #> 31:         0.981         0.998          0.992          0.983 #> 32:         0.974         0.998          0.990          0.983 #> 33:         0.987         0.999          0.994          0.991 #> 34:         0.989         0.999          0.997          0.995 #> 35:         0.967         0.997          0.993          0.981 #> 36:         0.989         0.998          0.994          0.993 #> 37:         0.995         0.998          0.994          0.990 #> 38:         0.979         0.997          0.993          0.993 #> 39:         0.991         0.998          0.995          0.993 #> 40:         0.989         0.999          0.996          0.976 #> 41:         0.994         0.998          0.991          0.983 #> 42:         0.995         0.998          0.996          0.987 #> 43:         0.986         0.998          0.996          0.992 #> 44:         0.996         0.999          0.998          0.995 #>     tripod-35-970 tripod-35-972 tripod-36-1003 tripod-36-1005"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diversityIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of diversity indices — diversityIndices","title":"Calculation of diversity indices — diversityIndices","text":"function computes set diversity indices repertoire level sample. calculated indices following: - Shannon index: Calculates proportional abundance species repertoire (Shannon, 1948). - Simpson index: Takes account number species present well abundance. gives relatively little weight rare species weight frequent ones (Simpson, 1949). - Inverse Simpson index: effective number species obtained weighted arithmetic mean used quantify average proportional abundance species. - Berger-Parker index: Expresses proportional importance abundant species. metric highly biased sample size richness (Berger Parker 1970). - Gini coefficient: Measures degree inequality distribution abundances (Gini, 1921).","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diversityIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of diversity indices — diversityIndices","text":"","code":"diversityIndices(   x,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diversityIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of diversity indices — diversityIndices","text":"x object class RepSeqExperiment level character specifying level repertoire diversity estimated. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\".","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diversityIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of diversity indices — diversityIndices","text":"data table diversity indices calculated sample.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/diversityIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of diversity indices — diversityIndices","text":"","code":"data(RepSeqData) diversityIndices(RepSeqData, level=\"V\") #>         sample_id shannon simpson invsimpson bergerparker  gini #>            <char>   <num>   <num>      <num>        <num> <num> #> 1:  tripod-30-813   4.042   0.977     42.656         2.76  0.56 #> 2:  tripod-30-815   4.033   0.976     41.479         2.68  0.57 #> 3:  tripod-31-846   4.064   0.977     44.097         2.84  0.55 #> 4:  tripod-31-848   4.022   0.976     40.932         2.67  0.55 #> 5:  tripod-35-970   4.037   0.975     39.528         2.41  0.54 #> 6:  tripod-35-972   4.004   0.974     38.769         2.62  0.58 #> 7: tripod-36-1003   4.069   0.977     43.832         2.76  0.54 #> 8: tripod-36-1005   4.064   0.977     43.791         2.76  0.55"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dot-toDESeq2.html","id":null,"dir":"Reference","previous_headings":"","what":"Differential expression analysis — .toDESeq2","title":"Differential expression analysis — .toDESeq2","text":"Differential expression analysis using DESeq2","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dot-toDESeq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differential expression analysis — .toDESeq2","text":"","code":".toDESeq2(   x,   colGrp,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dot-toDESeq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differential expression analysis — .toDESeq2","text":"x object class RepSeqExperiment colGrp vector character, specify groups compared. level character, level repertoire estimate. one \"aaClone\", \"V\", \"J\", \"VJ\" \"aaCDR3\".","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dot-toDESeq2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differential expression analysis — .toDESeq2","text":"DESeqDataSet object","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dot-toDESeq2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Differential expression analysis — .toDESeq2","text":"function compares expression level gene segment clone using DESEq2 package.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dropSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude repertoires from a RepSeqExperiment object. — dropSamples","title":"Exclude repertoires from a RepSeqExperiment object. — dropSamples","text":"function allows dropping one several samples RepSeqExperiment object specifying corresponding sample ids.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dropSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude repertoires from a RepSeqExperiment object. — dropSamples","text":"","code":"dropSamples(x, sampleNames)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dropSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude repertoires from a RepSeqExperiment object. — dropSamples","text":"x object class RepSeqExperiment sampleNames vector character sample_ids repertoires drop RepSeqExperiment object.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dropSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude repertoires from a RepSeqExperiment object. — dropSamples","text":"RepSeqExperiment object.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/dropSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude repertoires from a RepSeqExperiment object. — dropSamples","text":"","code":"data(RepSeqData)  dropRepSeqData<- dropSamples(x = RepSeqData,                              sampleNames=c(\"tripod-30-813\", \"tripod-30-815\"))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filetype.html","id":null,"dir":"Reference","previous_headings":"","what":"Give type of file — filetype","title":"Give type of file — filetype","text":"get type file","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filetype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give type of file — filetype","text":"","code":"filetype(path)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filetype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give type of file — filetype","text":"path path file","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filetype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give type of file — filetype","text":"string indicating file type","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filetype.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Give type of file — filetype","text":"function allows get type file","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filetype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Give type of file — filetype","text":"","code":"l <- list.files(system.file(file.path('extdata/MiAIRR'),                      package = 'AnalyzAIRR'),                      full.names = TRUE) path <- l[1]  file_type <- filetype(path)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterClones.html","id":null,"dir":"Reference","previous_headings":"","what":"Adaptive immune repertoire filtering — filterClones","title":"Adaptive immune repertoire filtering — filterClones","text":"function filters adaptive immune repertoires aligned AnalyzAIRR-supported tool. loaded clonotype table must however contain required columns: - sample_id: sample names - V: Variable gene name - J: Joining gene name - aaCDR3: amino acid CDR3 sequence - ntCDR3: nucleotide CDR3 sequence - aaClone: Full clone sequence including V gene, amino acid CDR3 sequence J gene - VJ: V-J gene combination using V J gene names - ntClone: Full clone sequence including V gene, nucleotide CDR3 sequence J gene - count: occurrence clone applies least one following filters: - filter ambiguous clones - filter unproductive sequences including --frame sequences stop codons - filter singletons, .e clones occurrence 1","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterClones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adaptive immune repertoire filtering — filterClones","text":"","code":"filterClones(   raw,   keep.ambiguous = FALSE,   keep.unproductive = FALSE,   aa.th = NULL,   outFiltered = FALSE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterClones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adaptive immune repertoire filtering — filterClones","text":"raw single clonotype table containing previously cited required columns keep.ambiguous boolean, whether ambiguous sequences containing \"N\" CDR3 nucleotide left . Default FALSE. keep.unproductive boolean, whether unproductive sequences left . Default FALSE. Unproductive sequences include: - --frame sequences: sequences frame shifts based number nucleotides ntCDR3 column - sequences containing stop codons: aaCDR3 sequences \"*\" \"~\" symbols.kept. Default FALSE. aa.th interger, indicates maximum number amino acids deviating mean length tolerate. Default 8. case, amino acid CDR3s sequences length falling outside range mean+- 8 filtered . outFiltered write directory path data frame containing filtered reads. Default path getwd().","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterClones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adaptive immune repertoire filtering — filterClones","text":"filtered clonotype table.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterClones.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adaptive immune repertoire filtering — filterClones","text":"","code":"l <- list.files(system.file(file.path('extdata/MiAIRR'),                      package = 'AnalyzAIRR'),                      full.names = TRUE) path <- l[1]  miairr_table <- parseAIRRC(path = path, chain = \"TRA\")  out <- filterClones(miairr_table,                         keep.ambiguous = FALSE,                         keep.unproductive = TRUE,                         aa.th = 8,                         outFiltered = FALSE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterCount.html","id":null,"dir":"Reference","previous_headings":"","what":"Filtering based on sequence count — filterCount","title":"Filtering based on sequence count — filterCount","text":"function filters , sample, sequences count equal specified threshold. can applied samples within RepSeqExperiment object, group samples belonging specific experimental group.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterCount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filtering based on sequence count — filterCount","text":"","code":"filterCount(   x,   level = c(\"aaClone\", \"ntClone\", \"aaCDR3\", \"ntCDR3\"),   n = 1,   group = NULL )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterCount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filtering based on sequence count — filterCount","text":"x object class RepSeqExperiment level character specifying type sequences filtering applied. one \"aaClone\",\"ntClone\",\"aaCDR3\" \"ntCDR3\". instance, level=\"aaCDR3\", counts first recalculated based column. , aaCDR3 sequences counts equal n threshold excluded. n integer specifying count threshold sequences filtered . instance, n=2, sequences count 1 2 filtered . group vector character indicating group column name mData one experimental group within column. Samples belonging chosen group analyzed. column must class factor. Default NULL, values calculated samples within dataset.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterCount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filtering based on sequence count — filterCount","text":"object class RepSeqExperiment","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterCount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filtering based on sequence count — filterCount","text":"","code":"data(RepSeqData)  filterdata <- filterCount(x = RepSeqData,                           n = 1,                           level = \"aaClone\",                           group = c(\"cell_subset\", \"amTreg\"))  filterdata <- filterCount(x=RepSeqData,                           n = 1,                           level = \"ntClone\",                           group = NULL)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterSequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude a sequence from a RepSeqExperiment object. — filterSequence","title":"Exclude a sequence from a RepSeqExperiment object. — filterSequence","text":"function allows drop one several sequences RepSeqExperiment object samples specified group samples.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterSequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude a sequence from a RepSeqExperiment object. — filterSequence","text":"","code":"filterSequence(   x,   level = c(\"aaClone\", \"ntClone\", \"aaCDR3\", \"ntCDR3\"),   name,   group = NULL )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterSequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude a sequence from a RepSeqExperiment object. — filterSequence","text":"x object class RepSeqExperiment level character specifying level repertoire taken account. one \"aaClone\",\"ntClone\", \"ntCDR3\" \"aaCDR3\". name vector character specifying name(s) sequence(s) filter RepSeqExperiment object. group vector character indicating group column name mData slot one experimental group within column.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterSequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude a sequence from a RepSeqExperiment object. — filterSequence","text":"RepSeqExperiment object.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/filterSequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude a sequence from a RepSeqExperiment object. — filterSequence","text":"","code":"data(RepSeqData)  RepSeqData<- filterSequence(x = RepSeqData,                             level=\"aaClone\",                             name=\"TRAV11 CVVGDRGSALGRLHF TRAJ18\",                             group=c(\"cell_subset\",\"Teff\"))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/formatSingleCell.html","id":null,"dir":"Reference","previous_headings":"","what":"A method for the building of a RepSeqExperiment object using single cell data — formatSingleCell","title":"A method for the building of a RepSeqExperiment object using single cell data — formatSingleCell","text":"function","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/formatSingleCell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A method for the building of a RepSeqExperiment object using single cell data — formatSingleCell","text":"","code":"formatSingleCell(path)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/formatSingleCell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A method for the building of a RepSeqExperiment object using single cell data — formatSingleCell","text":"path path acell ranger filtered contigs file","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/formatSingleCell.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A method for the building of a RepSeqExperiment object using single cell data — formatSingleCell","text":"object class RepSeqExperiment. See RepSeqExperiment-class details.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPrivate.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract private sequences — getPrivate","title":"Extract private sequences — getPrivate","text":"function extract private sequences whole dataset,  .e. sequences found exclusively one sample.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPrivate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract private sequences — getPrivate","text":"","code":"getPrivate(   x,   level = c(\"ntCDR3\", \"aaCDR3\", \"ntClone\", \"aaClone\"),   singletons = FALSE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPrivate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract private sequences — getPrivate","text":"x object class RepSeqExperiment level character specifying level repertoire taken account. one aaClone\",\"ntClone\", \"ntCDR3\" \"aaCDR3\". singletons boolean indicating whether private sequences count 1 extracted. Default FALSE.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPrivate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract private sequences — getPrivate","text":"object class RepSeqExperiment composed exclusively private sequences.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPrivate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract private sequences — getPrivate","text":"","code":"data(RepSeqData)  privateclones <- getPrivate(RepSeqData,                             level = \"ntClone\",                             singletons = FALSE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getProductive.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract productive sequences — getProductive","title":"Extract productive sequences — getProductive","text":"Extract productive sequences RepSeqExperiment object filtering unproductive ones. Filtered sequences include: - --frame sequences: sequences frame shifts based number nucleotides ntCDR3 column. - sequences containing stop codons: aaCDR3s \"*\" \"~\" symbols.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getProductive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract productive sequences — getProductive","text":"","code":"getProductive(x)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getProductive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract productive sequences — getProductive","text":"x object class RepSeqExperiment.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getProductive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract productive sequences — getProductive","text":"filtered RepSeqExperiment object exclusively containing productive sequences.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getProductive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract productive sequences — getProductive","text":"","code":"data(RepSeqData) productiveData <- getProductive(x = RepSeqData)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPublic.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract public sequences — getPublic","title":"Extract public sequences — getPublic","text":"function allows subset RepSeqExperiment object order keep sequences shared least two samples: - belonging specified group - within whole dataset","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPublic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract public sequences — getPublic","text":"","code":"getPublic(x, level = c(\"ntCDR3\", \"aaCDR3\", \"ntClone\", \"aaClone\"), group = NULL)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPublic.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract public sequences — getPublic","text":"x object class RepSeqExperiment level character specifying level repertoire taken account. one \"aaClone\",\"ntClone\", \"ntCDR3\" \"aaCDR3\". group vector character indicating group column name mData slot one experimental group within column. Samples belonging chosen experimental group analyzed. column must class factor. Default NULL, analysis performed whole dataset.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPublic.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract public sequences — getPublic","text":"object class RepSeqExperiment composed exclusively shared sequences specified samples.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getPublic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract public sequences — getPublic","text":"","code":"data(RepSeqData)  publicSeq <- getPublic(x = RepSeqData,                              level = \"aaClone\",                              group = c(\"cell_subset\", \"amTreg\"))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getTopSequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the most frequent sequences — getTopSequences","title":"Extract the most frequent sequences — getTopSequences","text":"function extracts top n sequences within samples group samples.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getTopSequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the most frequent sequences — getTopSequences","text":"","code":"getTopSequences(   x,   level = c(\"aaClone\", \"ntClone\", \"aaCDR3\", \"ntCDR3\"),   group = NULL,   prop = 0.01 )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getTopSequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the most frequent sequences — getTopSequences","text":"x object class RepSeqExperiment level character specifying level repertoire taken account. one aaClone\",\"ntClone\", \"ntCDR3\" \"aaCDR3\". group character, column name mData indicating group extraction applied. Must class factor. Default NULL. prop numeric 0 1 indicating proportion top sequences extract.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getTopSequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the most frequent sequences — getTopSequences","text":"object class RepSeqExperiment","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getTopSequences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the most frequent sequences — getTopSequences","text":"","code":"data(RepSeqData) topClones <- getTopSequences(x = RepSeqData,                           level = \"aaClone\",                           group = c(\"cell_subset\", \"amTreg\"), prop = 0.1)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getUnproductive.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract unproductive sequences — getUnproductive","title":"Extract unproductive sequences — getUnproductive","text":"Extract unproductive sequences RepSeqExperiment object, include: - --frame sequences: sequences frame shifts based number nucleotides ntCDR3 column - sequences containing stop codons: aaCDR3s \"*\" \"~\" symbols.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getUnproductive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract unproductive sequences — getUnproductive","text":"","code":"getUnproductive(x)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getUnproductive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract unproductive sequences — getUnproductive","text":"x object class RepSeqExperiment.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getUnproductive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract unproductive sequences — getUnproductive","text":"filtered RepSeqExperiment object exclusively containing unproductive sequences.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/getUnproductive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract unproductive sequences — getUnproductive","text":"","code":"# \\donttest{ data(RepSeqData)  unproductiveData <- getUnproductive(x = RepSeqData) #> Error in validObject(.Object): invalid class “RepSeqExperiment” object: some count in assay are not integers.  # }"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/iChao.html","id":null,"dir":"Reference","previous_headings":"","what":"Improved Chao1 — iChao","title":"Improved Chao1 — iChao","text":"calculate improved Chao1 index","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/iChao.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Improved Chao1 — iChao","text":"","code":"iChao(x)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/iChao.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Improved Chao1 — iChao","text":"x vector count. Can list clone counts within given sample.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/iChao.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Improved Chao1 — iChao","text":"computed iChao1 value","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/iChao.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Improved Chao1 — iChao","text":"function computes improved version Chao1 (Chao Lin, 2012)","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/iChao.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Improved Chao1 — iChao","text":"","code":"set.seed(1234) x <- rbinom(20, 5, 0.5) iChao(x) #> [1] 19.14"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/mergeRepSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge RepSeqExperiment objects — mergeRepSeq","title":"Merge RepSeqExperiment objects — mergeRepSeq","text":"function allows merge two RepSeqExperiement objects. two objects must however contain unique different sample_ids. function can useful case users wish analyze alignment files different formats, biological/technical replicates.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/mergeRepSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge RepSeqExperiment objects — mergeRepSeq","text":"","code":"mergeRepSeq(a, b)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/mergeRepSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge RepSeqExperiment objects — mergeRepSeq","text":"first  RepSeqExperiment object. b second  RepSeqExperiment object.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/mergeRepSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge RepSeqExperiment objects — mergeRepSeq","text":" RepSeqExperiment object containing information two merged objects.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/mergeRepSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge RepSeqExperiment objects — mergeRepSeq","text":"","code":"l <- list.files(system.file(file.path('extdata/MiAIRR'),                      package = 'AnalyzAIRR'),                      full.names = TRUE)  metaData <- read.table(system.file(file.path('extdata/sampledata.txt'),                          package='AnalyzAIRR'),                          sep = \"\\t\",                          row.names = 1, header = TRUE)  dataset1 <- readAIRRSet(fileList = l[c(1:3)],                        cores=1L,                        fileFormat = \"MiAIRR\",                        chain = \"TRA\",                        sampleinfo = metaData[1:3,],                        filter.singletons = FALSE,                        outFiltered = FALSE) #> Running on 1 cores... #> Loading and filtering sequences... #> Assembling sequences... #> Creating a RepSeqExperiment object... #> Done.  dataset2 <- readAIRRSet(fileList = l[c(4:8)],                        cores=1L,                        fileFormat = \"MiAIRR\",                        chain = \"TRA\",                        sampleinfo = metaData[4:8,],                        filter.singletons = FALSE,                        outFiltered = FALSE) #> Running on 1 cores... #> Loading and filtering sequences... #> Assembling sequences... #> Creating a RepSeqExperiment object... #> Done.  dataset <- mergeRepSeq(a = dataset1, b = dataset2)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/named.contr.sum.html","id":null,"dir":"Reference","previous_headings":"","what":"Contrast matrix creation — named.contr.sum","title":"Contrast matrix creation — named.contr.sum","text":"create contrast matrix factor level names","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/named.contr.sum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contrast matrix creation — named.contr.sum","text":"","code":"named.contr.sum(x, ...)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/named.contr.sum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contrast matrix creation — named.contr.sum","text":"x factor ... parameters passed function contr.sum","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/named.contr.sum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contrast matrix creation — named.contr.sum","text":"contrast design matrix","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/named.contr.sum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Contrast matrix creation — named.contr.sum","text":"function creates contrast matrix factor level names.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseAIRRC.html","id":null,"dir":"Reference","previous_headings":"","what":"parse MiAIRR format — parseAIRRC","title":"parse MiAIRR format — parseAIRRC","text":"parse MiAIRR format","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseAIRRC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parse MiAIRR format — parseAIRRC","text":"","code":"parseAIRRC(path, chain = c(\"TRA\", \"TRB\", \"TRG\", \"TRD\", \"IGH\", \"IGK\", \"IGL\"))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseAIRRC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parse MiAIRR format — parseAIRRC","text":"path full path aligned file. Files can loaded gzipped. chain character, TCR chain analyzed. One B. Default value .","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseAIRRC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parse MiAIRR format — parseAIRRC","text":"data.table 9 columns: sample_id name, V V gene, J J gene,VJ V-J gene combinations, aaCDR3 amino acid CDR3 sequence, ntCDR3 nucleotide CDR3 sequence, ntClone full clone sequence nucleotide, aaClone full clone sequence amino acid, count clone count. Clones eliminated STOP codon (*) detected aaCDR3 chain, ntCDR3 length divisible 3 ntCDR3 sequence ambiguous (contains \"N\" base).","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseAIRRC.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"parse MiAIRR format — parseAIRRC","text":"function imports MiAIRR Rearrangement format tab-delimited file format (.tsv) defines required optional annotations rearranged adaptive immune receptor sequences","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseImmunoseq.html","id":null,"dir":"Reference","previous_headings":"","what":"parse immunoseq output — parseImmunoseq","title":"parse immunoseq output — parseImmunoseq","text":"parse output tables immunoseq","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseImmunoseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parse immunoseq output — parseImmunoseq","text":"","code":"parseImmunoseq(   path,   chain = c(\"TRA\", \"TRB\", \"TRG\", \"TRD\", \"IGH\", \"IGK\", \"IGL\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseImmunoseq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parse immunoseq output — parseImmunoseq","text":"path full path aligned file. Files can loaded gzipped. chain character, TCR chain analyzed. One B. Default value .","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseImmunoseq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parse immunoseq output — parseImmunoseq","text":"data.table 9 columns: sample_id name, V V gene, J J gene,VJ V-J gene combinations, aaCDR3 amino acid CDR3 sequence, ntCDR3 nucleotide CDR3 sequence, ntClone full clone sequence nucleotide, aaClone full clone sequence amino acid, count clone count. Clones eliminated STOP codon (*) detected aaCDR3 chain, ntCDR3 length divisible 3 ntCDR3 sequence ambiguous (contains \"N\" base).","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseImmunoseq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"parse immunoseq output — parseImmunoseq","text":"function imports clonotype tables produced immunoseq aligner.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseMiXCR.html","id":null,"dir":"Reference","previous_headings":"","what":"parse MiXCR output — parseMiXCR","title":"parse MiXCR output — parseMiXCR","text":"parse clonotype tables MiXCR","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseMiXCR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"parse MiXCR output — parseMiXCR","text":"","code":"parseMiXCR(path, chain = c(\"TRA\", \"TRB\", \"TRG\", \"TRD\", \"IGH\", \"IGK\", \"IGL\"))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseMiXCR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"parse MiXCR output — parseMiXCR","text":"path full path aligned file. Files can loaded gzipped. chain character, TCR chain analyzed. One B. Default value .","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseMiXCR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"parse MiXCR output — parseMiXCR","text":"data.table 9 columns: sample_id name, V V gene, J J gene,VJ V-J gene combinations, aaCDR3 amino acid CDR3 sequence, ntCDR3 nucleotide CDR3 sequence, ntClone full clone sequence nucleotide, aaClone full clone sequence amino acid, count clone count. Clones eliminated STOP codon (*) detected aaCDR3 chain, ntCDR3 length divisible 3 ntCDR3 sequence ambiguous (contains \"N\" base).","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/parseMiXCR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"parse MiXCR output — parseMiXCR","text":"function imports clonotype tables produced MiXCR aligner.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/perturbationScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of the perturbation score — perturbationScore","title":"Calculation of the perturbation score — perturbationScore","text":"function computes perturbation scores aaCDR3 length distribution within V gene. Scores calculated distance repertoire mean control group using ISEApeaks method (Colette Six., 2002).","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/perturbationScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of the perturbation score — perturbationScore","text":"","code":"perturbationScore(   x,   ctrl.names,   distance = c(\"manhattan\", \"euclidean\", \"canberra\", \"minkowski\", \"maximum\"),   p = 2 )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/perturbationScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of the perturbation score — perturbationScore","text":"x object class RepSeqExperiment ctrl.names vector characters indicating sample_ids used controls. distance character specifying distance method used calculation perturbation scores. one following: \"manhattan\", \"euclidean\", \"canberra\", \"minkowski\" \"maximum\". p integer indicating power Minkowski distance. Default 2.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/perturbationScore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of the perturbation score — perturbationScore","text":"data frame containing perturbation scores V-gene.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/perturbationScore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of the perturbation score — perturbationScore","text":"","code":"data(RepSeqData) pert <- perturbationScore(RepSeqData,                           ctrl.names = c(\"tripod-30-813\",                                          \"tripod-30-815\",                                          \"tripod-31-846\"),                           distance = \"manhattan\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palette — plotColors","title":"Color palette — plotColors","text":"function allows automatic color assigning, chosen color-blinded friendly palettes, every sample experimental group metadata. , sample/group assigned color visualization functions.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palette — plotColors","text":"","code":"plotColors(x)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color palette — plotColors","text":"x object class RepSeqExperiment","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color palette — plotColors","text":"list distinct colors assigned sample/group mData.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palette — plotColors","text":"","code":"data(RepSeqData)  colors <- plotColors(x = RepSeqData)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDiffExp.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of differential expression in a volcano plot — plotDiffExp","title":"Visualization of differential expression in a volcano plot — plotDiffExp","text":"function plots differentially expressed repertoire levels calculated using diffExpGroup volcano plot.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDiffExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of differential expression in a volcano plot — plotDiffExp","text":"","code":"plotDiffExp(   x,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\"),   group = c(\"cell_subset\", \"amTreg\", \"nTreg\"),   FC.TH = 2,   PV.TH = 0.05,   top = 10 )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDiffExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of differential expression in a volcano plot — plotDiffExp","text":"x object class  RepSeqExperiment level character specifying level repertoire diversity estimated. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\". group vector character indicating column name mData slot, well two groups compared. FC.TH integer indicating log2FoldChange threshold. Default 2. PV.TH integer indicating adjusted pvalue threshold. Default 0.05. top integer indicating top n significant labels shown volcano plot. Default 10.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDiffExp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of differential expression in a volcano plot — plotDiffExp","text":"","code":"data(RepSeqData)  plotDiffExp(x = RepSeqData,             level = \"V\",             group = c(\"cell_subset\", \"amTreg\", \"nTreg\"),             top = 10,             FC.TH = 1,             PV.TH = 0.05) #> Warning: some variables in design formula are characters, converting to factors #> using pre-existing size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing #> Warning: Removed 8 rows containing missing values or values outside the scale range #> (`geom_text_repel()`).   plotDiffExp(x = RepSeqData,             level = \"V\",             group = c(\"cell_subset\", \"amTreg\", \"nTreg\")) #> Warning: some variables in design formula are characters, converting to factors #> using pre-existing size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing #> Warning: Removed 10 rows containing missing values or values outside the scale range #> (`geom_text_repel()`)."},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDissimilarity.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of repertoire dissimilarities — plotDissimilarity","title":"Visualization of repertoire dissimilarities — plotDissimilarity","text":"function assesses pairwise repertoire dissimilarities using specific dissimilarity method. calculates list dissimilarity indices, taking account different parameters. proposed methods include: Jaccard similarity: measure similarity sample sets defined size intersection divided size union sample sets. Morisita-Horn similarity: measure similarity tends -sensitive abundant species. function also performs hierarchical clustering calculated distance scores case results represented heatmap.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDissimilarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of repertoire dissimilarities — plotDissimilarity","text":"","code":"plotDissimilarity(   x,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\"),   method = c(\"manhattan\", \"euclidean\", \"canberra\", \"clark\", \"bray\", \"kulczynski\",     \"jaccard\", \"gower\", \"altGower\", \"morisita\", \"horn\", \"mountford\", \"raup\", \"binomial\",     \"chao\", \"cao\", \"mahalanobis\"),   clustering = c(\"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\",     \"median\", \"centroid\"),   binary = FALSE,   colorBy = NULL,   plot = c(\"Heatmap\", \"MDS\"),   label_colors = NULL )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDissimilarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of repertoire dissimilarities — plotDissimilarity","text":"x object class RepSeqExperiment level character specifying level repertoire indices computed. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\". method character specifying distance method computed. one following: \"manhattan\", \"euclidean\", \"canberra\", \"clark\", \"bray\", \"kulczynski\", \"jaccard\", \"gower\", \"altGower\", \"morisita\", \"horn\", \"mountford\", \"raup\", \"binomial\", \"chao\", \"cao\", \"mahalanobis.\" clustering character specifying clustering method used case heatmap plotted. , parameter can set NULL. binary boolean indicating whether transform data presence/absence data. Default FALSE colorBy vector indicating least column name mData. Colors thus attributed different groups within column. chosen column must class factor. plot character indicating type visualization results represented, either heatmap MDS. label_colors list colors factor column metaData. See plotColors. NULL, default colors used.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDissimilarity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualization of repertoire dissimilarities — plotDissimilarity","text":"Details calculated indices well clustering methods can found vegan package: https://www.rdocumentation.org/packages/vegan/versions/2.4-2/topics/vegdist","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDissimilarity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of repertoire dissimilarities — plotDissimilarity","text":"","code":"data(RepSeqData)  plotDissimilarity(x = RepSeqData, level = \"V\", method = \"euclidean\", colorBy=\"sex\", plot=\"MDS\") #> New names: #> • `` -> `...1` #> • `` -> `...2`   plotDissimilarity(x = RepSeqData, level = \"aaCDR3\", method = \"jaccard\",                    colorBy=c(\"sex\",\"cell_subset\"), plot=\"Heatmap\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDiversity.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the diversity indices — plotDiversity","title":"Visualization of the diversity indices — plotDiversity","text":"function plots compares chosen diversity index calculated selected repertoire level groups samples. calculated indices can one following: - Shannon index: Calculates proportional abundance species repertoire. - Simpson index: Takes account number species present well abundance. gives relatively little weight rare species weight frequent ones - Inverse Simpson index: effective number species obtained weighted arithmetic mean used quantify average proportional abundance species. - Berger-Parker index: Expresses proportional importance abundant species. metric highly biased sample size richness (Berger Parker 1970). - Gini coefficient: Measures degree inequality distribution abundances.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDiversity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the diversity indices — plotDiversity","text":"","code":"plotDiversity(   x,   index = c(\"shannon\", \"simpson\", \"invsimpson\", \"bergerparker\", \"gini\"),   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\"),   grouped = FALSE,   colorBy = NULL,   facetBy = NULL,   label_colors = NULL,   show_stats = FALSE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDiversity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the diversity indices — plotDiversity","text":"x object class RepSeqExperiment index character specifying diversity index estimated. one \"shannon\",\"invsimpson\",\"simpson\", \"bergerparker\" \"gini\". level character specifying level repertoire diversity estimated. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\". grouped character indicating one multiple groups compared. Wilcoxon test thus performed adjusted p-values using Holm method shown. Colors attributed different groups within first column, facet applied second column. specified, statistical tests performed, calculated values sample_id represented. colorBy character indicating column name mData. Colors thus attributed different groups within column. chosen column must class factor. facetBy vector character indicating one two column names mData apply facet . label_colors list colors variable ColorBy. See plotColors. NULL, default colors used. show_stats whether statistically compare groups","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotDiversity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the diversity indices — plotDiversity","text":"","code":"data(RepSeqData)  plotDiversity(x = RepSeqData, level = \"V\", colorBy = \"sample_id\",                facetBy=\"cell_subset\", index=\"shannon\")   plotDiversity(x = RepSeqData, level = \"ntCDR3\", colorBy = \"cell_subset\", facetBy=\"sex\",                grouped=TRUE, index=\"simpson\")   plotDiversity(x = RepSeqData, level = \"aaClone\", colorBy = \"cell_subset\", facetBy=\"sex\",                grouped=TRUE, index=\"shannon\",  show_stats=TRUE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotGeneUsage.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare V or J gene distributions — plotGeneUsage","title":"Compare V or J gene distributions — plotGeneUsage","text":"function compares V J gene usages given groups.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotGeneUsage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare V or J gene distributions — plotGeneUsage","text":"","code":"plotGeneUsage(   x,   level = c(\"V\", \"J\"),   scale = c(\"count\", \"frequency\"),   colorBy = NULL,   facetBy = NULL,   label_colors = NULL,   show_stats = FALSE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotGeneUsage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare V or J gene distributions — plotGeneUsage","text":"x object class  RepSeqExperiment level character specifying level repertoire taken account calculating gene usages. one \"aaClone\" \"ntClone\". scale character specifying whether plot gene usage \"count\" \"frequency\". colorBy character indicating column name mData. Colors thus attributed different groups within column. chosen column must class factor. facetBy vector character indicating one two column names mData apply facet . label_colors list colors variable ColorBy. See plotColors. NULL, default colors used. show_stats whether statistically compare groups","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotGeneUsage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare V or J gene distributions — plotGeneUsage","text":"","code":"data(RepSeqData)  plotGeneUsage(x = RepSeqData, level = \"J\", scale = \"count\", colorBy = \"cell_subset\", show_stats=TRUE )   plotGeneUsage(x = RepSeqData, level = \"V\", scale = \"count\", colorBy = \"cell_subset\", facetBy=\"sex\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndGeneUsage.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the V or J gene usage — plotIndGeneUsage","title":"Visualization of the V or J gene usage — plotIndGeneUsage","text":"function plots heatmap V J combination usage within sample interest. Frequencies, represented color scale, scaled column-wise. Barplots top right side heatmap show usage gene across row column V J genes, respectively.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndGeneUsage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the V or J gene usage — plotIndGeneUsage","text":"","code":"plotIndGeneUsage(x, sampleName = NULL, level = c(\"aaClone\", \"ntClone\"))"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndGeneUsage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the V or J gene usage — plotIndGeneUsage","text":"x object class  RepSeqExperiment sampleName character specifying sample_id analyze. Default NULL, plots first sample dataset. level character specifying level repertoire taken account calculating gene usages. one \"aaClone\" \"ntClone\".","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndGeneUsage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the V or J gene usage — plotIndGeneUsage","text":"","code":"data(RepSeqData) snames <- rownames(mData(RepSeqData))  plotIndGeneUsage(x = RepSeqData, level = \"aaClone\", sampleName = snames[1])"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndIntervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the clonal distribution per interval in a single sample — plotIndIntervals","title":"Visualization of the clonal distribution per interval in a single sample — plotIndIntervals","text":"function plots two histograms clonal distribution per set fixed intervals given sample. upper plot calculates proportion interval whole repertoire, whereas lower plot shows cumulative frequency sequences within interval. allows global view repertoire fraction contributing repertoire. instance, top sequences belonging highest interval often constitute low fraction whole repertoire contribute significantly terms cumulative frequency view high occurrence.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndIntervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the clonal distribution per interval in a single sample — plotIndIntervals","text":"","code":"plotIndIntervals(   x,   sampleName = NULL,   level = c(\"aaClone\", \"ntClone\", \"ntCDR3\", \"aaCDR3\"),   fractions = c(\"count\", \"frequency\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndIntervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the clonal distribution per interval in a single sample — plotIndIntervals","text":"x object class  RepSeqExperiment sampleName character specifying sample_id analyze. Default NULL, plots first sample dataset. level character specifying level repertoire taken account calculating clonal distribution. one \"aaClone\",\"ntClone\", \"ntCDR3\" \"aaCDR3\". fractions whether intervals determined count frequency","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndIntervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the clonal distribution per interval in a single sample — plotIndIntervals","text":"","code":"data(RepSeqData)  snames <- rownames(mData(RepSeqData))  plotIndIntervals(x = RepSeqData, level=\"aaCDR3\", sampleName = snames[1],  fractions=\"count\")   plotIndIntervals(x = RepSeqData, level=\"aaClone\", sampleName = NULL,  fractions=\"frequency\") #> Plot the first sample in the dataset: tripod-30-813"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndMap.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of a repertoire structure through a circular treemap — plotIndMap","title":"Visualization of a repertoire structure through a circular treemap — plotIndMap","text":"function plots clones single repertoire circular treemap, showing clone distributiion within repertoire. circle represents unique clone, circle size corresponds clone count.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndMap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of a repertoire structure through a circular treemap — plotIndMap","text":"","code":"plotIndMap(   x,   sampleName = NULL,   prop = 0.01,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndMap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of a repertoire structure through a circular treemap — plotIndMap","text":"x object class RepSeqExperiment sampleName character specifying sample_id analyze. Default NULL, plots first sample dataset. prop numeric indicating proportions clones plotted. ranges 0 1. level character specifying level repertoire diversity estimated. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\".","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndMap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of a repertoire structure through a circular treemap — plotIndMap","text":"","code":"data(RepSeqData)  sname <- rownames(mData(RepSeqData))[1]  plotIndMap(x=RepSeqData, sampleName=sname, level=\"aaClone\", prop=0.01)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndStatistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of basic or diversity statistics for one sample — plotIndStatistics","title":"Visualization of basic or diversity statistics for one sample — plotIndStatistics","text":"function plots statistics mData slot highlights one specific sample amongst samples. Basic statistics include: - nSequences: total number sequences sample - ntCDR3: number unique nucleotide CDR3s - aaCDR3: number unique amino acid CDR3s - V: total number V genes expressed sample - J: total number J genes - VJ: total number V-J gene combinations - aaClone: number unique aaClones - ntClone: number unique ntClones Diversity statistics include: - Shannon index: Calculates proportional abundance species repertoire. - Simpson index: Takes account number species present well abundance. gives relatively little weight rare species weight frequent ones - Inverse Simpson index: effective number species obtained weighted arithmetic mean used quantify average proportional abundance species. - Berger-Parker index: Expresses proportional importance abundant species. metric highly biased sample size richness (Berger Parker 1970). - Gini coefficient: Measures degree inequality distribution abundances.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndStatistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of basic or diversity statistics for one sample — plotIndStatistics","text":"","code":"plotIndStatistics(   x,   sampleName = NULL,   stat = c(\"metadata\", \"diversity\"),   level = c(\"aaClone\", \"ntClone\", \"ntCDR3\", \"aaCDR3\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndStatistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of basic or diversity statistics for one sample — plotIndStatistics","text":"x object class RepSeqExperiment sampleName character specifying sample_id analyze. Default NULL, plots first sample dataset. stat character specifying whether plot basic diversity statistics. level character specifying level repertoire diversity estimated. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\". required plotting diversity indices.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIndStatistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of basic or diversity statistics for one sample — plotIndStatistics","text":"","code":"data(RepSeqData)  plotIndStatistics(x = RepSeqData, stat = \"metadata\") #> Plot the first sample in the dataset: tripod-30-813   plotIndStatistics(x = RepSeqData, stat = \"diversity\",  level = \"aaClone\") #> Plot the first sample in the dataset: tripod-30-813"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIntervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the clonal distribution per interval — plotIntervals","title":"Visualization of the clonal distribution per interval — plotIntervals","text":"function plots two histograms clonal distribution per set intervals samples within dataset. plot titled \"Distribution\" calculates proportion interval whole repertoire, whereas one titled \"Cumulative frequency\" shows cumulative frequency sequences within interval. allow global view repertoire fraction contributing repertoire. instance, top sequences belonging highest interval often constitute low fraction whole repertoire contribute significantly terms cumulative frequency view high occurrence. Samples can statistically compared interval using groupBy parameter.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIntervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the clonal distribution per interval — plotIntervals","text":"","code":"plotIntervals(   x,   level = c(\"aaClone\", \"ntClone\", \"ntCDR3\", \"aaCDR3\"),   grouped = FALSE,   colorBy = NULL,   facetBy = NULL,   label_colors = NULL,   show_stats = FALSE,   fractions = c(\"count\", \"frequency\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIntervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the clonal distribution per interval — plotIntervals","text":"x object class  RepSeqExperiment level character specifying level repertoire taken account calculating clonal distribution. one \"aaClone\",\"ntClone\", \"ntCDR3\" \"aaCDR3\". grouped character indicating one multiple groups compared. Wilcoxon test thus performed adjusted p-values using Holm method shown. Colors attributed different groups within first column, facet applied second column. specified, statistical tests performed, calculated values sample_id represented. colorBy character indicating column name mData. Colors thus attributed different groups within column. chosen column must class factor. facetBy vector character indicating one two column names mData apply facet . label_colors list colors variable ColorBy. See plotColors. NULL, default colors used. show_stats whether statistically compare groups fractions whether intervals determined count frequency","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotIntervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the clonal distribution per interval — plotIntervals","text":"","code":"data(RepSeqData)  plotIntervals(x = RepSeqData, level=\"aaCDR3\", facetBy=\"cell_subset\", fractions=\"count\")   plotIntervals(x = RepSeqData, level=\"ntCDR3\", colorBy=\"cell_subset\", grouped=TRUE,                fractions=\"frequency\", show_stats=TRUE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotPerturbationScore.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the perturbation scores — plotPerturbationScore","title":"Visualization of the perturbation scores — plotPerturbationScore","text":"plots calculated perturbation scores using perturbationScore function onto heatmap.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotPerturbationScore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the perturbation scores — plotPerturbationScore","text":"","code":"plotPerturbationScore(   x,   ctrl.names = NULL,   distance = c(\"manhattan\", \"euclidean\", \"canberra\", \"minkowski\", \"maximum\"),   p = 2,   order = \"cell_subset\",   label_colors = NULL )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotPerturbationScore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the perturbation scores — plotPerturbationScore","text":"x object class RepSeqExperiment ctrl.names vector characters indicating sample_ids used controls. distance character specifying distance method used calculation perturbation scores. one following: \"manhattan\", \"euclidean\", \"canberra\", \"minkowski\" \"maximum\". p integer indicating power Minkowski distance. Default 2. order character specifying column name mData used reference order sample_ids heatmap, hierarchical clustering performed analysis. label_colors list colors variable ColorBy. See plotColors. NULL, default colors used.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotPerturbationScore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the perturbation scores — plotPerturbationScore","text":"","code":"data(RepSeqData) plotPerturbationScore(x = RepSeqData,                       ctrl.names = c(\"tripod-30-813\" ,\"tripod-31-846\"  ,\"tripod-35-970\"),                       distance = \"manhattan\",                       order= \"cell_subset\") #> Warning: Row annotation has different order from matrix rows. Adjust the row #> annotation based on row names of the matrix."},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRankDistrib.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the clonal distribution as a function of the rank — plotRankDistrib","title":"Visualization of the clonal distribution as a function of the rank — plotRankDistrib","text":"function plots clonal distribution, repertoire level, function occurrence rank within sample. instance, frequent sequence attributed rank 1, relative abundance plotted y-axis.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRankDistrib.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the clonal distribution as a function of the rank — plotRankDistrib","text":"","code":"plotRankDistrib(   x,   level = c(\"aaClone\", \"ntClone\", \"ntCDR3\", \"aaCDR3\"),   scale = c(\"count\", \"frequency\"),   ranks = NULL,   grouped = FALSE,   colorBy = NULL,   facetBy = NULL,   label_colors = NULL )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRankDistrib.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the clonal distribution as a function of the rank — plotRankDistrib","text":"x object class RepSeqExperiment level character specifying level repertoire taken account plot clonal distribution. one \"aaClone\", \"ntClone\", \"ntCDR3\" \"aaCDR3\". scale character specifying whether plot clonal abundance \"count\" \"frequency\". ranks integer specifying number top ranks plotted. Default NULL, plots ranks. grouped boolean indicating whether mean se samples belonging experimental group specified ColorBy parameter computed. Grouping performed chosen groupe colorBy. Default FALSE. colorBy character indicating one column name mData. Colors thus attributed different groups within column. chosen column must class factor. facetBy vector character indicating one two column names mData apply facet . label_colors list colors variable ColorBy. See plotColors. NULL, default colors used.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRankDistrib.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the clonal distribution as a function of the rank — plotRankDistrib","text":"","code":"data(\"RepSeqData\")  plotRankDistrib(x = RepSeqData, level=\"ntClone\", colorBy = \"sample_id\",                  facetBy=\"sex\", scale = \"count\")   plotRankDistrib(x = RepSeqData, level=\"aaClone\", colorBy = \"cell_subset\",                  grouped=TRUE, scale = \"frequency\")   plotRankDistrib(x = RepSeqData,level=\"ntCDR3\", colorBy = \"cell_subset\", facetBy=\"sex\",                  grouped=TRUE,  scale = \"frequency\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRarefaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the rarefaction curves — plotRarefaction","title":"Visualization of the rarefaction curves — plotRarefaction","text":"function plots rarefaction curve sample within dataset. Rarefaction measure species richness. curves plot number clones number sequences sample, obtained randomly re-sampling number sequences multiple times representing mean number found clones.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRarefaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the rarefaction curves — plotRarefaction","text":"","code":"plotRarefaction(x, colorBy = NULL, label_colors = NULL)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRarefaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the rarefaction curves — plotRarefaction","text":"x object class  RepSeqExperiment colorBy character indicating column name mData. Colors thus attributed different groups within column. chosen column must class factor. label_colors list colors variable ColorBy. See plotColors. NULL, default colors used.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRarefaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of the rarefaction curves — plotRarefaction","text":"none","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRarefaction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the rarefaction curves — plotRarefaction","text":"","code":"data(RepSeqData)  plotRarefaction(x = RepSeqData, colorBy = \"sex\")   plotRarefaction(x = RepSeqData, colorBy = \"cell_subset\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRenyiIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the Renyi index — plotRenyiIndex","title":"Visualization of the Renyi index — plotRenyiIndex","text":"function plots Renyi values repertoire level samples dataset. alpha values Renyi estimated can personalized, thus allowing focus certain indices Shannon index alpha=1 Simpson index alpha=2. instance, frequent sequence attributed rank 1, relative abundance plotted y-axis.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRenyiIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the Renyi index — plotRenyiIndex","text":"","code":"plotRenyiIndex(   x,   alpha = c(0, 0.25, 0.5, 1, 2, 4, 8, 16, 32, 64, Inf),   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\"),   colorBy = NULL,   facetBy = NULL,   grouped = FALSE,   label_colors = NULL )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRenyiIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the Renyi index — plotRenyiIndex","text":"x object class RepSeqExperiment alpha numerical vector specifying alpha values compute. specified, following values estimated: c(0, 0.25, 0.5, 1, 2, 4, 8, 16, 32, 64, Inf). level character specifying level repertoire taken account calculating VJ usages. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\". colorBy character indicating column name mData. Colors thus attributed different groups within column. chosen column must class factor. facetBy vector character indicating one two column names mData apply facet . grouped boolean indicating whether mean se samples belonging experimental group specified ColorBy parameter calculated. Grouping performed group chosen colorBy parameter. Default FALSE. label_colors list colors variable ColorBy. See plotColors. NULL, default colors used.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRenyiIndex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualization of the Renyi index — plotRenyiIndex","text":"Renyi index generalization Shannon index. represents distribution clonal expansions function parameter alpha. alpha=0, equally considers species including rare ones, whereas -weighs abundant species increasing value alpha. Alpha =1 approximation Shannon index; alpha = 2 corresponds Simpson index alpha=Inf corresponds Berger-Parker index. latter highlights highest clonal expansion repertoire.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotRenyiIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the Renyi index — plotRenyiIndex","text":"","code":"data(RepSeqData)  plotRenyiIndex(x = RepSeqData,  alpha = c(0,  1, 2, 8, 16, 32, 64), level = \"V\", colorBy = \"sex\")   plotRenyiIndex(x = RepSeqData,  alpha = c(0,  1, 2, 8, 16, 32, 64), level = \"V\", colorBy = \"sample_id\")   plotRenyiIndex(x = RepSeqData, level = \"J\", colorBy = \"cell_subset\", grouped=TRUE)   plotRenyiIndex(x = RepSeqData, level = \"J\", colorBy = \"sex\", facetBy= \"cell_subset\", grouped=TRUE)   plotRenyiIndex(x = RepSeqData, level = \"J\", colorBy = \"sample_id\", grouped=FALSE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotScatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the inter-repertoire sharing on a scatter plot — plotScatter","title":"Visualization of the inter-repertoire sharing on a scatter plot — plotScatter","text":"function computes correlation pair repertoires repertoire level. allows comparative analysis occurrence given repertoire level pair samples, goes beyond simple calculation sharing degree.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotScatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the inter-repertoire sharing on a scatter plot — plotScatter","text":"","code":"plotScatter(   x,   sampleNames = NULL,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\"),   scale = c(\"frequency\", \"count\"),   shiny = FALSE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotScatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the inter-repertoire sharing on a scatter plot — plotScatter","text":"x object class RepSeqExperiment sampleNames vector character indicating two sample_ids repertoires analyzed. level character specifying level repertoire analyzes. one \"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\". scale character specifying whether plot \"count\" \"frequency\". shiny default FALSE. whether plot shiny compatible version","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotScatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the inter-repertoire sharing on a scatter plot — plotScatter","text":"","code":"data(RepSeqData) plotScatter(x = RepSeqData,             level = \"V\",             sampleNames = c(\"tripod-30-813\", \"tripod-30-815\", \"tripod-31-846\"),             scale = \"count\")               plotScatter(x = RepSeqData,             level = \"aaClone\",             sampleNames = c(\"tripod-30-813\", \"tripod-30-815\"),             scale = \"frequency\") #> Warning: Ignoring unknown parameters: `label.fontface` #> `geom_smooth()` using formula = 'y ~ x'"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotSpectratyping.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of CDR3 spectratyping — plotSpectratyping","title":"Visualization of CDR3 spectratyping — plotSpectratyping","text":"CDR3 spectratyping allows large-scale analysis repertoire diversity based CDR3 amino acid length usage. technique, polyclonal repertoire represented eight-peak bell-shaped profile, disturbed following immune response. function plots histogram CDR3 length distribution single sample. also possible add information V gene usage per CDR3 length. , proportion used V genes within repertoire can specified prop parameter, thus showing relative proportions within CDR3 length. Moreover, function integrates statistical method can applied spectratypes order compare peak distributions across different groups samples called ISEApeaks (Colette Six, 2002). strategy can applied using perturbationScore function.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotSpectratyping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of CDR3 spectratyping — plotSpectratyping","text":"","code":"plotSpectratyping(   x,   sampleName = NULL,   scale = c(\"count\", \"frequency\"),   prop = 0 )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotSpectratyping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of CDR3 spectratyping — plotSpectratyping","text":"x object class RepSeqExperiment sampleName character specifying sample_id analyze. Default NULL, plots first sample dataset. scale character specifying whether plot length usage \"count\" \"frequency\". prop numeric indicating proportions top V genes plotted. ranges 0 1.","code":""},{"path":[]},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotSpectratyping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of CDR3 spectratyping — plotSpectratyping","text":"","code":"data(RepSeqData) snames <- rownames(mData(RepSeqData))  plotSpectratyping(x = RepSeqData, sampleName = NULL, scale = \"count\", prop=1) #> Plot the first sample in the dataset: tripod-30-813   plotSpectratyping(x = RepSeqData, sampleName = NULL, scale = \"frequency\", prop=0) #> Plot the first sample in the dataset: tripod-30-813"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotSpectratypingV.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the CDR3 spectratyping per V gene — plotSpectratypingV","title":"Visualization of the CDR3 spectratyping per V gene — plotSpectratypingV","text":"CDR3 spectratyping allows large-scale analysis repertoire diversity based CDR3 amino acid length usage. technique, polyclonal repertoire represented eight-peak bell-shaped profile disturbed following immune response. function plots histogram CDR3 length distribution per V gene single sample.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotSpectratypingV.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the CDR3 spectratyping per V gene — plotSpectratypingV","text":"","code":"plotSpectratypingV(   x,   sampleName = NULL,   scale = c(\"count\", \"frequency\"),   prop = 0 )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotSpectratypingV.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the CDR3 spectratyping per V gene — plotSpectratypingV","text":"x object class RepSeqExperiment sampleName character specifying sample_id analyze. Default NULL, plots first sample dataset. scale character specifying whether plot length usage \"count\" \"frequency\". prop numeric indicating proportions top V genes plotted. ranges 0 1.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotSpectratypingV.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the CDR3 spectratyping per V gene — plotSpectratypingV","text":"","code":"data(RepSeqData)  snames <- rownames(mData(RepSeqData))  plotSpectratypingV(x = RepSeqData, sampleName = snames[1], scale = \"count\", prop=0.05)   plotSpectratypingV(x = RepSeqData, sampleName = snames[1], scale = \"frequency\")"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotStatScatter.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of basic statistics in a scatter plot — plotStatScatter","title":"Visualization of basic statistics in a scatter plot — plotStatScatter","text":"function plots values two statistics mData slot along two axes samples datatset. shows relationship . statistics include: - nSequences: total number sequences sample - ntCDR3: number unique nucleotide CDR3s - aaCDR3: number unique amino acid CDR3s - V: total number V genes expressed sample - J: total number J genes - VJ: total number V-J gene combinations - aaClone: number unique aaClones - ntClone: number unique ntClones - Chao1: Estimates undetected species using information rarest species (numbers singletons doubletons) (Chao, 1984). - Improved Chao1: extension Chao1 uses additional information, namely, numbers tripletons quadrupletons  (Chiu et al., 2014). user-defined numeric statistics metadata.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotStatScatter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of basic statistics in a scatter plot — plotStatScatter","text":"","code":"plotStatScatter(   x,   stat1 = NULL,   stat2 = NULL,   colorBy = NULL,   facetBy = NULL,   label_colors = NULL )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotStatScatter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of basic statistics in a scatter plot — plotStatScatter","text":"x object class RepSeqExperiment stat1 character specifying first numeric column name metadata plot. stat2 character specifying second numeric column name metadata plot. colorBy character indicating column name mData. Colors thus attributed different groups within column. chosen column must class factor. facetBy vector character indicating one two column names mData apply facet . label_colors list colors variable groupBy See plotColors. NULL, default colors used.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotStatScatter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of basic statistics in a scatter plot — plotStatScatter","text":"","code":"data(RepSeqData)  plotStatScatter(x = RepSeqData, stat1 = \"nSequences\", stat2 = \"aaClone\", colorBy = \"sample_id\")   plotStatScatter(x = RepSeqData, stat1 = \"ntClone\", stat2 = \"aaClone\", colorBy = \"cell_subset\") #> Error in ggplot2::geom_point(size = 2, shape = 21): Problem while computing aesthetics. #> ℹ Error occurred in the 1st layer. #> Caused by error: #> ! object 'cell_subset' not found"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotStatistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of basic statistics — plotStatistics","title":"Visualization of basic statistics — plotStatistics","text":"function plots statistics mData slot, calculated sample building RepSeqExperiment object. statistics include: - nSequences: total number sequences sample - ntCDR3: number unique nucleotide CDR3s - aaCDR3: number unique amino acid CDR3s - V: total number V genes expressed sample - J: total number J genes - VJ: total number V-J gene combinations - aaClone: number unique aaClones - ntClone: number unique ntClones user-defined numeric statistics metadata. can compared groups samples simply plotted sample.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotStatistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of basic statistics — plotStatistics","text":"","code":"plotStatistics(   x,   stat = NULL,   grouped = FALSE,   colorBy = NULL,   facetBy = NULL,   label_colors = NULL,   show_stats = FALSE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotStatistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of basic statistics — plotStatistics","text":"x object class RepSeqExperiment stat character specifying numeric column name metadata plot. grouped character indicating one multiple groups compared. Wilcoxon test thus performed adjusted p-values using Holm method shown. Colors attributed different groups within first column, facet applied second column. specified, statistical tests performed, calculated values sample_id represented. colorBy character indicating column name mData. Colors thus attributed different groups within column. chosen column must class factor. facetBy vector character indicating one two column names mData apply facet . label_colors list colors variable groupBy See plotColors. NULL, default colors used. show_stats whether statistically compare groups","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotStatistics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of basic statistics — plotStatistics","text":"","code":"data(RepSeqData)  plotStatistics(x = RepSeqData, stat = \"V\", colorBy = \"sex\")   plotStatistics(x = RepSeqData, colorBy = \"cell_subset\", facetBy=\"sex\", stat = \"aaClone\", grouped=TRUE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotVJusage.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the VJ combination usage — plotVJusage","title":"Visualization of the VJ combination usage — plotVJusage","text":"function calculates count frequency combination taking account weight chosen repertoire level: either \"aaClone\" \"ntClone\". offers two types visualization calculated VJ usage given sample, either circos plot heatmap.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotVJusage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the VJ combination usage — plotVJusage","text":"","code":"plotVJusage(   x,   sampleName = NULL,   scale = c(\"count\", \"frequency\"),   level = c(\"aaClone\", \"ntClone\"),   prop = 1,   plot = c(\"Circos\", \"Heatmap\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotVJusage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the VJ combination usage — plotVJusage","text":"x object class RepSeqExperiment sampleName character specifying sample_id analyze. Default NULL, plots first sample dataset. scale character specifying whether plot VJ usage \"count\" \"frequency\". level character specifying level repertoire taken account calculate VJ usages. one \"aaClone\" \"ntClone\". prop numeric indicating proportions top VJ combinations plotted. ranges 0 1. plot character indicating type visualization results represented, either heatmap circos plot.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotVJusage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the VJ combination usage — plotVJusage","text":"","code":"data(RepSeqData)#'  plotVJusage(x = RepSeqData, sampleName = NULL, scale = \"count\",              level=\"aaClone\", prop=0.1, plot=\"Circos\") #> Plot the first sample in the dataset: tripod-30-813 #> Using to as id variables   plotVJusage(x = RepSeqData, sampleName = NULL, scale = \"frequency\",              level=\"ntClone\", prop=1, plot=\"Heatmap\") #> Plot the first sample in the dataset: tripod-30-813 #> Using to as id variables"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotVenn.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the inter-repertoire sharing on an Venn diagram — plotVenn","title":"Visualization of the inter-repertoire sharing on an Venn diagram — plotVenn","text":"repertoire sharing level evaluates degree convergence repertoires experimental conditions. function plots number shared sequences, repertoire level, samples belonging instance, experimental group. limitations number sample_ids imposed, however visualization purposes, maximum 5 sample_ids ideally specified.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotVenn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the inter-repertoire sharing on an Venn diagram — plotVenn","text":"","code":"plotVenn(   x,   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\"),   sampleNames = NULL )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotVenn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the inter-repertoire sharing on an Venn diagram — plotVenn","text":"x object class RepSeqExperiment level character specifying level repertoire diversity estimated. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\". sampleNames vector character indicating sample_ids repertoires analyzed. specified, first three samples dataset analyzed.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/plotVenn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualization of the inter-repertoire sharing on an Venn diagram — plotVenn","text":"","code":"data(RepSeqData)  snames <- rownames(mData(RepSeqData))[1:4]  plotVenn(x = RepSeqData, level = \"V\", sampleNames = snames)   plotVenn(x = RepSeqData, level = \"aaCDR3\", sampleNames = NULL)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/rarefactionTab.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of rarefaction values — rarefactionTab","title":"Calculation of rarefaction values — rarefactionTab","text":"function computes rarefaction values sample. Rarefaction measure species richness. assesses number observed clones sets N sequences sample randomly re-sampling number sequences multiple times calculating mean number observed clones.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/rarefactionTab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of rarefaction values — rarefactionTab","text":"","code":"rarefactionTab(x)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/rarefactionTab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of rarefaction values — rarefactionTab","text":"x object class RepSeqExperiment","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/rarefactionTab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of rarefaction values — rarefactionTab","text":"data.table values can represented graphically rarefaction curves. function plotRarefaction can used purpose.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/rarefactionTab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculation of rarefaction values — rarefactionTab","text":"","code":"data(RepSeqData)  rarefactionTab(x = RepSeqData) #>           sample_id       x        y #>              <char>   <num>    <num> #>   1:  tripod-30-813       0     0.00 #>   2:  tripod-30-813    5000  4048.17 #>   3:  tripod-30-813   10000  7246.50 #>   4:  tripod-30-813   15000 10009.74 #>   5:  tripod-30-813   20000 12475.97 #>  ---                                 #> 173: tripod-36-1005  800000 25874.96 #> 174: tripod-36-1005  900000 26157.51 #> 175: tripod-36-1005 1000000 26412.42 #> 176: tripod-36-1005 1100000 26645.01 #> 177: tripod-36-1005 1134587 26721.00"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRR.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a single alignment file — readAIRR","title":"Read a single alignment file — readAIRR","text":"parse filter clonotype tables.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a single alignment file — readAIRR","text":"","code":"readAIRR(   path,   fileFormat = c(\"MiXCR\", \"immunoseq\", \"MiAIRR\"),   chain = c(\"TRA\", \"TRB\", \"TRG\", \"TRD\", \"IGH\", \"IGK\", \"IGL\"),   keep.ambiguous = FALSE,   keep.unproductive = FALSE,   aa.th = NULL,   outFiltered = FALSE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a single alignment file — readAIRR","text":"path path output file supported aligners. fileFormat character, name aligner. one \"immunoseq\", \"MiXCR\" \"MiAIRR\". Default MiXCR. chain character, indicates TCR chain import: alpha chain B beta chain. Default . keep.ambiguous boolean, whether ambiguous sequences (containing STOP codon) kept. Default FALSE. keep.unproductive boolean, whether unproductive sequences (Euclidean dividion aa length 3 > 0) kept. Default FALSE. aa.th interger, indicates maximum number amino acids deviating mean length tolerate. Default NULL. outFiltered write directory path data frame containing columns input clonotype table filterd reads rows. Default path getwd().","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a single alignment file — readAIRR","text":"filtered clonotype table.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a single alignment file — readAIRR","text":"function wrapper parse functions & filterClones","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a single alignment file — readAIRR","text":"","code":"l <- list.files(system.file(file.path('extdata/MiAIRR'),                      package = 'AnalyzAIRR'),                      full.names = TRUE)   dataset <- readAIRR(path = l[1],                           fileFormat = \"MiAIRR\",                           chain = \"TRA\",                           keep.ambiguous = FALSE,                           keep.unproductive = FALSE,                          outFiltered = FALSE,                           aa.th = NULL)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRRSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Building of a RepSeqExperiment object — readAIRRSet","title":"Building of a RepSeqExperiment object — readAIRRSet","text":"function builds RepSeqExperiment object alignment files generated MiXCR immunoseq, well files formatted following AIRR standards guidelines. set filters can applied loaded files building process including: - filtering ambiguous sequences - filtering unproductive sequences including ones stop codons, namely --frame sequences - filtering singletons, .e clones occurrence 1 - filtering short extensively long amino acid CDR3 sequences","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRRSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Building of a RepSeqExperiment object — readAIRRSet","text":"","code":"readAIRRSet(   fileList,   fileFormat = c(\"MiXCR\", \"immunoseq\", \"MiAIRR\"),   chain = c(\"TRA\", \"TRB\", \"TRG\", \"TRD\", \"IGH\", \"IGK\", \"IGL\"),   sampleinfo = NULL,   keep.ambiguous = FALSE,   keep.unproductive = FALSE,   filter.singletons = FALSE,   aa.th = NULL,   outFiltered = FALSE,   cores = 1L )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRRSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Building of a RepSeqExperiment object — readAIRRSet","text":"fileList list paths alignment files. File format can one following: .tsv, txt.gz, .zip, .tar fileFormat character vector specifying format input files, .e. tool used generate/align files. one \"MiXCR\", \"immunoseq\", \"MiAIRR\". chain character vector indicating single TCR Ig chain analyze. vector can one following: - \"TRA\", \"TRB\",\"TRG\" \"TRD\" TCR repertoires - \"IGH\",\"IGK\" \"IGL\" BCR repertoires sampleinfo data frame containing: - column sample_ids. Ids match base names corresponding files well order list. column assigned row.names metadata file loaded (see example ). - additional columns relevant information analyses. Group columns must transformed factors loading (see example ). specific column names order required keep.ambiguous boolean indicating whether ambiguous sequences containing \"N\" nucleotide CDR3 left . Default FALSE. keep.unproductive boolean indicating whether unproductive sequences left . Default FALSE. Unproductive sequences include: - --frame sequences: sequences frame shifts based number nucleotides CDR3s - sequences containing stop codons: aaCDR3 sequences \"*\" \"~\" kept. Default FALSE filter.singletons boolean indicating whether ntClones (V+ntCDR3+J) occurrence 1 filtered . Default FALSE aa.th integer determining CDR3 amino acid sequence length limits, .e. maximum number amino acids deviating mean length accepted. default value 8, keeps amino acid CDR3s length falls inside following range: mean length-8 =< aa.th <= mean length+ 8. outFiltered boolean indicating whether write oData slot RepSeqexperiment object data frame containing filtered reads. cores integer indicating number CPU cores used function. process paralleled can thus used multiple cores. Default 1.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRRSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Building of a RepSeqExperiment object — readAIRRSet","text":"object class RepSeqExperiment  used analytical metrics proposed AnalyzAIRR package. See RepSeqExperiment-class details.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readAIRRSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Building of a RepSeqExperiment object — readAIRRSet","text":"","code":"l <- list.files(system.file(file.path('extdata/MiAIRR'),                      package = 'AnalyzAIRR'),                      full.names = TRUE)  metaData <- read.table(system.file(file.path('extdata/sampledata.txt'),                          package='AnalyzAIRR'),                          sep = \"\\t\",                          row.names = 1, header = TRUE)  metaData$cell_subset <- factor(metaData$cell_subset) metaData$sex <- factor(metaData$sex)  dataset <- readAIRRSet(fileList = l,                        fileFormat = \"MiAIRR\",                        chain = \"TRA\",                        sampleinfo = metaData,                        filter.singletons = FALSE,                        aa.th=9,                        outFiltered = FALSE,                        cores=1L) #> Running on 1 cores... #> Loading and filtering sequences... #> Assembling sequences... #> Creating a RepSeqExperiment object... #> Done."},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readFormatSet.html","id":null,"dir":"Reference","previous_headings":"","what":"An alternative method for the building of a RepSeqExperiment object — readFormatSet","title":"An alternative method for the building of a RepSeqExperiment object — readFormatSet","text":"function allows loading alignment files formats ones supported readAIRRSet function. files contain following column names: - sample_id: Sample names - ntCDR3: nucleotide CDR3 sequence - aaCDR3: amino acid CDR3 sequence - V: Variable gene name (IMGT nomenclature) - J: Joining gene name (IMGT nomenclature) - count: occurrence sequence order columns must respected. Input files can contain additional columns however taken account generated RepSeqExperiment object. Similarly readAIRRSet function, readFormatSet applies series filters building process. possible filters can applied include: - filtering ambiguous sequences - filtering unproductive sequences including ones stop codons, namely --frame sequences - filtering singletons, .e clonotypes occurrence 1 - filtering short extensively long amino acid CDR3 sequences","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readFormatSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An alternative method for the building of a RepSeqExperiment object — readFormatSet","text":"","code":"readFormatSet(   fileList,   chain = c(\"TRA\", \"TRB\", \"TRG\", \"TRD\", \"IGH\", \"IGK\", \"IGL\"),   sampleinfo = NULL,   keep.ambiguous = FALSE,   keep.unproductive = FALSE,   filter.singletons = FALSE,   aa.th = 8,   outFiltered = TRUE,   cores = 1L )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readFormatSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An alternative method for the building of a RepSeqExperiment object — readFormatSet","text":"fileList list paths alignment files. File format can one following: .tsv, txt.gz, .zip, .tar chain character vector indicating single TCR Ig chain analyze. vector can one following: - \"TRA\", \"TRB\",\"TRG\" \"TRD\" TCR repertoires - \"IGH\",\"IGK\" \"IGL\" BCR repertoires sampleinfo data frame containing: - column sample_ids. Ids match base names corresponding files well order list. column assigned row.names metadata file loaded (see example ). - additional columns relevant information analyses. Group columns must transformed factors loading (see example ). specific column names order required keep.ambiguous boolean indicating whether ambiguous sequences containing \"N\" nucleotide CDR3 left . Default FALSE. keep.unproductive boolean indicating whether unproductive sequences left . Default FALSE. Unproductive sequences include: - --frame sequences: sequences frame shifts based number nucleotides CDR3s - sequences containing stop codons: aaCDR3 sequences \"*\" \"~\" kept. Default FALSE filter.singletons boolean indicating whether ntClones (V+ntCDR3+J) occurrence 1 filtered . Default FALSE aa.th integer determining CDR3 amino acid sequence length limits, .e. maximum number amino acids deviating mean length accepted. default value 8, keeps amino acid CDR3s length falls inside following range: mean length-8 =< aa.th <= mean length+ 8. outFiltered boolean indicating whether write oData slot RepSeqexperiment object data frame containing filtered reads. cores integer indicating number cores uses function. process paralleled can thus used multiple cores. Default 1.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readFormatSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An alternative method for the building of a RepSeqExperiment object — readFormatSet","text":"object class RepSeqExperiment  used analytical metrics proposed AnalyzAIRR package. See RepSeqExperiment-class details.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readFormatSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An alternative method for the building of a RepSeqExperiment object — readFormatSet","text":"","code":"l <- list.files(system.file(file.path('extdata/informat'),                      package = 'AnalyzAIRR'),                      full.names = TRUE)"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readInFormat.html","id":null,"dir":"Reference","previous_headings":"","what":"read in format — readInFormat","title":"read in format — readInFormat","text":"alternative","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readInFormat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read in format — readInFormat","text":"","code":"readInFormat(   path,   chain = c(\"TRA\", \"TRB\", \"TRG\", \"TRD\", \"IGH\", \"IGK\", \"IGL\"),   keep.ambiguous = FALSE,   keep.unproductive = FALSE,   aa.th = NULL,   outFiltered = FALSE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readInFormat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read in format — readInFormat","text":"path full path aligned file. Files can loaded gzipped. chain character, TCR chain analyzed. One B. Default value . keep.ambiguous boolean, whether ambiguous sequences containing \"N\" CDR3 nucleotide left . Default FALSE. keep.unproductive boolean, whether unproductive sequences left . Default FALSE. Unproductive sequences include: - --frame sequences: sequences frame shifts based number nucleotides ntCDR3 column - sequences containing stop codons: aaCDR3 sequences \"*\" \"~\" symbols.kept. Default FALSE. aa.th interger, indicates maximum number amino acids deviating mean length tolerate. Default 8. case, amino acid CDR3s sequences length falling outside range mean+- 8 filtered . outFiltered write directory path data frame containing filtered reads. Default path getwd().","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readInFormat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read in format — readInFormat","text":"data.table 9 columns: sample_id name, V V gene, J J gene,VJ V-J gene combinations, aaCDR3 amino acid CDR3 sequence, ntCDR3 nucleotide CDR3 sequence, ntClone full clone sequence nucleotide, aaClone full clone sequence amino acid, count clone count. Clones eliminated STOP codon (*) detected aaCDR3 chain, ntCDR3 length divisible 3 ntCDR3 sequence ambiguous (contains \"N\" base).","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readSingleCellSet.html","id":null,"dir":"Reference","previous_headings":"","what":"A method for the building of a RepSeqExperiment object using single cell data — readSingleCellSet","title":"A method for the building of a RepSeqExperiment object using single cell data — readSingleCellSet","text":"function","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readSingleCellSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A method for the building of a RepSeqExperiment object using single cell data — readSingleCellSet","text":"","code":"readSingleCellSet(   fileList,   sampleinfo = NULL,   filter.singletons = FALSE,   cores = 1L )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readSingleCellSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A method for the building of a RepSeqExperiment object using single cell data — readSingleCellSet","text":"fileList path cell ranger filtered contigs file sampleinfo path cell ranger filtered contigs file filter.singletons path cell ranger filtered contigs file cores path acell ranger filtered contigs file","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/readSingleCellSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A method for the building of a RepSeqExperiment object using single cell data — readSingleCellSet","text":"object class RepSeqExperiment. See RepSeqExperiment-class details.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/renyiIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Computation of the Renyi index — renyiIndex","title":"Computation of the Renyi index — renyiIndex","text":"function computes Renyi values repertoire level samples RepSeqExperiment object. alpha values Renyi estimated can personalized, thus allowing focus certain indices Shannon index alpha=1 Simpson index alpha=2.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/renyiIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Computation of the Renyi index — renyiIndex","text":"","code":"renyiIndex(   x,   alpha = c(0, 0.25, 0.5, 1, 2, 4, 8, 16, 32, 64, Inf),   level = c(\"aaClone\", \"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\", \"aaCDR3\") )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/renyiIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Computation of the Renyi index — renyiIndex","text":"x object class RepSeqExperiment alpha numerical vector specifying alpha values compute. specified, following values estimated: c(0, 0.25, 0.5, 1, 2, 4, 8, 16, 32, 64, Inf). level character specifying level repertoire taken account calculate VJ usages. one \"aaClone\",\"ntClone\", \"V\", \"J\", \"VJ\", \"ntCDR3\" \"aaCDR3\".","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/renyiIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Computation of the Renyi index — renyiIndex","text":"table Renyi values calculated alpha sample.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/renyiIndex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Computation of the Renyi index — renyiIndex","text":"Renyi index generalization Shannon index. represents distribution clonal expansions function parameter alpha. alpha=0, equally considers species including rare ones, whereas -weighs abundant species increasing value alpha. Alpha =1 approximation Shannon index; alpha = 2 corresponds Simpson index alpha=Inf corresponds Berger-Parker index. latter expresses proportional importance abundant species.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/renyiIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Computation of the Renyi index — renyiIndex","text":"","code":"data(RepSeqData)  renyiIndex(RepSeqData, level = \"V\", alpha = 1) #> Key: <variable> #>    variable tripod-30-813 tripod-30-815 tripod-31-846 tripod-31-848 #>      <fctr>         <num>         <num>         <num>         <num> #> 1:        1          4.04          4.03          4.06          4.02 #>    tripod-35-970 tripod-35-972 tripod-36-1003 tripod-36-1005 #>            <num>         <num>          <num>          <num> #> 1:          4.04             4           4.07           4.06"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/sampleRepSeqExp.html","id":null,"dir":"Reference","previous_headings":"","what":"Down-sampling of repertoires — sampleRepSeqExp","title":"Down-sampling of repertoires — sampleRepSeqExp","text":"function downsamples repertoires dataset. Users can choose value samples -sampled. specified, lowest number sequences across samples within dataset used. strategy can applied studying different cell subsets significant differences repertoire sizes.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/sampleRepSeqExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Down-sampling of repertoires — sampleRepSeqExp","text":"","code":"sampleRepSeqExp(   x,   sample.size = min(mData(x)$nSequences),   rngseed = FALSE,   replace = TRUE,   verbose = TRUE )"},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/sampleRepSeqExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Down-sampling of repertoires — sampleRepSeqExp","text":"x object class RepSeqExperiment sample.size integer indicating desired -sampled size. default smallest repertoire size among samples dataset. rngseed integer used seed reproducible result. replace boolean indicating resampling performed without replacement. Default TRUE. verbose boolean indicating whether show details every computation step within function. Default TRUE.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/sampleRepSeqExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Down-sampling of repertoires — sampleRepSeqExp","text":"new RepSeqExperiment  downsized data.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/sampleRepSeqExp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Down-sampling of repertoires — sampleRepSeqExp","text":"","code":"data(RepSeqData)  RepSeqData_ds<- sampleRepSeqExp(x = RepSeqData,                                 rngseed = 1234,                                 replace = TRUE) #> `set.seed( 1234 )` was applied for reproducibility of the random subsampling. Please save this seed for data reproduction  #> You can try `set.seed( 1234 ); .Random.seed` for the full vector. #> Down-sampling to 386373 sequences... #> Creating a RepSeqExperiment object... #> Done.  RepSeqData_ds<- sampleRepSeqExp(x = RepSeqData,                                 rngseed = FALSE,                                 replace = FALSE) #> You set `rngseed` to FALSE. Make sure you've set & saved #>   the random seed of your session for reproducibility. #>  See `?set.seed` #> Down-sampling to 386373 sequences... #> Creating a RepSeqExperiment object... #> Done."},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/theme_RepSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"A theme for the visualization plots — theme_RepSeq","title":"A theme for the visualization plots — theme_RepSeq","text":"unique plot theme used visualization plots. function generated using ggplot2 package, users can easily customize generated plots using ggplot2 arguments.","code":""},{"path":"https://i3-unit.github.io/AnalyzAIRR/reference/theme_RepSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A theme for the visualization plots — theme_RepSeq","text":"","code":"theme_RepSeq()"}]
